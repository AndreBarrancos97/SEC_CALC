$date
	Thu Jan  9 17:48:08 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module xtop_tb $end
$var wire 32 ! r0 [31:0] $end
$var wire 32 " r1 [31:0] $end
$var wire 32 # r10 [31:0] $end
$var wire 32 $ r11 [31:0] $end
$var wire 32 % r12 [31:0] $end
$var wire 32 & r13 [31:0] $end
$var wire 32 ' r14 [31:0] $end
$var wire 32 ( r15 [31:0] $end
$var wire 32 ) r2 [31:0] $end
$var wire 32 * r3 [31:0] $end
$var wire 32 + r4 [31:0] $end
$var wire 32 , r5 [31:0] $end
$var wire 32 - r6 [31:0] $end
$var wire 32 . r7 [31:0] $end
$var wire 32 / r8 [31:0] $end
$var wire 32 0 r9 [31:0] $end
$var wire 1 1 trap $end
$var wire 4 2 Disp_sel [3:0] $end
$var wire 8 3 Disp [7:0] $end
$var reg 1 4 Btn2 $end
$var reg 1 5 Btn3 $end
$var reg 8 6 Sw [7:0] $end
$var reg 1 7 clk $end
$var reg 1 8 rst $end
$var integer 32 9 k [31:0] $end
$var integer 32 : start_time [31:0] $end
$scope module uut $end
$var wire 1 4 Btn2 $end
$var wire 1 5 Btn3 $end
$var wire 8 ; Sw [7:0] $end
$var wire 1 7 clk $end
$var wire 1 8 rst $end
$var wire 1 1 trap $end
$var wire 4 < second_nr [3:0] $end
$var wire 8 = result_uncoded [7:0] $end
$var wire 1 > regf_sel $end
$var wire 32 ? regf_data_to_rd [31:0] $end
$var wire 9 @ pc [8:0] $end
$var wire 4 A operation [3:0] $end
$var wire 1 B mem_sel $end
$var wire 32 C mem_data_to_rd [31:0] $end
$var wire 1 D led0_sel $end
$var wire 32 E instruction [31:0] $end
$var wire 4 F first_nr [3:0] $end
$var wire 1 G display_sel $end
$var wire 1 H data_we $end
$var wire 32 I data_to_wr [31:0] $end
$var wire 32 J data_to_rd [31:0] $end
$var wire 1 K data_sel $end
$var wire 10 L data_addr [9:0] $end
$var wire 1 M cprt_sel $end
$var wire 1 N complement2_sel $end
$var wire 1 O complement2_finish $end
$var wire 1 P alu_sel $end
$var wire 1 Q alu_finish $end
$var wire 4 R Disp_sel [3:0] $end
$var wire 8 S Disp [7:0] $end
$scope module addr_decoder $end
$var wire 1 4 btn2_data_to_read $end
$var wire 1 5 btn3_data_to_read $end
$var wire 8 T sw_data_to_read [7:0] $end
$var wire 1 K sel $end
$var wire 32 U regf_data_to_rd [31:0] $end
$var wire 32 V mem_data_to_rd [31:0] $end
$var wire 1 Q display_data_to_read $end
$var wire 1 O alu_data_to_read $end
$var wire 10 W addr [9:0] $end
$var reg 1 P alu_sel $end
$var reg 1 X azz $end
$var reg 1 Y btn2_sel $end
$var reg 1 Z btn3_sel $end
$var reg 1 N complement2_sel $end
$var reg 1 M cprt_sel $end
$var reg 32 [ data_to_rd [31:0] $end
$var reg 1 G display_sel $end
$var reg 1 D led0_sel $end
$var reg 1 B mem_sel $end
$var reg 1 > regf_sel $end
$var reg 1 \ sw2_sel $end
$var reg 1 ] sw_sel $end
$var reg 1 1 trap_sel $end
$upscope $end
$scope module complement1 $end
$var wire 1 ^ ci $end
$var wire 1 7 clk $end
$var wire 1 N complement1_sel $end
$var wire 1 _ complement1_sel_aux $end
$var wire 4 ` dumb_0 [3:0] $end
$var wire 12 a nr_coded [11:0] $end
$var wire 1 8 rst $end
$var wire 4 b second_nr_aux [3:0] $end
$var wire 4 c first_nr_aux [3:0] $end
$var wire 1 d complement1_finish_nr2 $end
$var wire 1 e complement1_finish_nr1 $end
$var reg 1 O complement1_finish $end
$var reg 4 f first_nr [3:0] $end
$var reg 4 g first_nr_reg [3:0] $end
$var reg 4 h oper_nr_reg [3:0] $end
$var reg 4 i operation [3:0] $end
$var reg 4 j second_nr [3:0] $end
$var reg 4 k second_nr_reg [3:0] $end
$scope module complement_first_nr $end
$var wire 4 l a [3:0] $end
$var wire 4 m a_xor [3:0] $end
$var wire 4 n aux_xor [3:0] $end
$var wire 4 o b [3:0] $end
$var wire 1 ^ ci $end
$var wire 1 7 clk $end
$var wire 1 p co $end
$var wire 1 N complement1_sel $end
$var wire 1 8 rst $end
$var wire 4 q sum_aux_v2 [3:0] $end
$var wire 4 r sum_aux [3:0] $end
$var wire 1 s done $end
$var wire 1 e complement1_finish $end
$var wire 1 t aux3 $end
$var wire 1 u aux2 $end
$var wire 1 v aux1 $end
$var reg 4 w counter [3:0] $end
$var reg 4 x sum [3:0] $end
$scope module adder0 $end
$var wire 1 y a $end
$var wire 1 z b $end
$var wire 1 ^ ci $end
$var wire 1 v co $end
$var wire 1 { out_and1 $end
$var wire 1 | out_and2 $end
$var wire 1 } out_xor $end
$var wire 1 ~ sum $end
$upscope $end
$scope module adder1 $end
$var wire 1 !" a $end
$var wire 1 "" b $end
$var wire 1 v ci $end
$var wire 1 u co $end
$var wire 1 #" out_and1 $end
$var wire 1 $" out_and2 $end
$var wire 1 %" out_xor $end
$var wire 1 &" sum $end
$upscope $end
$scope module adder2 $end
$var wire 1 '" a $end
$var wire 1 (" b $end
$var wire 1 u ci $end
$var wire 1 t co $end
$var wire 1 )" out_and1 $end
$var wire 1 *" out_and2 $end
$var wire 1 +" out_xor $end
$var wire 1 ," sum $end
$upscope $end
$upscope $end
$scope module complement_second_nr $end
$var wire 4 -" a [3:0] $end
$var wire 4 ." a_xor [3:0] $end
$var wire 4 /" aux_xor [3:0] $end
$var wire 4 0" b [3:0] $end
$var wire 1 ^ ci $end
$var wire 1 7 clk $end
$var wire 1 1" co $end
$var wire 1 N complement1_sel $end
$var wire 1 8 rst $end
$var wire 4 2" sum_aux_v2 [3:0] $end
$var wire 4 3" sum_aux [3:0] $end
$var wire 1 4" done $end
$var wire 1 d complement1_finish $end
$var wire 1 5" aux3 $end
$var wire 1 6" aux2 $end
$var wire 1 7" aux1 $end
$var reg 4 8" counter [3:0] $end
$var reg 4 9" sum [3:0] $end
$scope module adder0 $end
$var wire 1 :" a $end
$var wire 1 ;" b $end
$var wire 1 ^ ci $end
$var wire 1 7" co $end
$var wire 1 <" out_and1 $end
$var wire 1 =" out_and2 $end
$var wire 1 >" out_xor $end
$var wire 1 ?" sum $end
$upscope $end
$scope module adder1 $end
$var wire 1 @" a $end
$var wire 1 A" b $end
$var wire 1 7" ci $end
$var wire 1 6" co $end
$var wire 1 B" out_and1 $end
$var wire 1 C" out_and2 $end
$var wire 1 D" out_xor $end
$var wire 1 E" sum $end
$upscope $end
$scope module adder2 $end
$var wire 1 F" a $end
$var wire 1 G" b $end
$var wire 1 6" ci $end
$var wire 1 5" co $end
$var wire 1 H" out_and1 $end
$var wire 1 I" out_and2 $end
$var wire 1 J" out_xor $end
$var wire 1 K" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module controller $end
$var wire 1 L" alu_arith_ops $end
$var wire 1 M" alu_imm_ops $end
$var wire 1 N" alu_logic_ops $end
$var wire 1 O" alu_mem_ops $end
$var wire 1 P" alu_ops $end
$var wire 32 Q" and_res [31:0] $end
$var wire 1 R" branch_ops $end
$var wire 1 7 clk $end
$var wire 1 S" imm_ops $end
$var wire 1 T" load_imm_ops $end
$var wire 1 U" load_mem_ops $end
$var wire 1 V" load_ops $end
$var wire 32 W" mem_data_from [31:0] $end
$var wire 32 X" mem_data_to [31:0] $end
$var wire 1 K mem_sel $end
$var wire 1 H mem_we $end
$var wire 1 8 rst $end
$var wire 1 Y" store_mem_ops $end
$var wire 32 Z" xor_res [31:0] $end
$var wire 4 [" opcode [3:0] $end
$var wire 32 \" instruction [31:0] $end
$var wire 32 ]" imm [31:0] $end
$var reg 32 ^" adder_res [31:0] $end
$var reg 1 _" alu_carry $end
$var reg 1 `" alu_negative $end
$var reg 1 a" alu_overflow $end
$var reg 32 b" alu_result [31:0] $end
$var reg 1 c" carry_res_n $end
$var reg 32 d" carry_res_n_1 [31:0] $end
$var reg 10 e" mem_addr [9:0] $end
$var reg 32 f" operand [31:0] $end
$var reg 9 g" pc [8:0] $end
$var reg 32 h" regA [31:0] $end
$var reg 32 i" regB [31:0] $end
$var reg 3 j" regC [2:0] $end
$upscope $end
$scope module cprint $end
$var wire 1 7 clk $end
$var wire 8 k" data_in [7:0] $end
$var wire 1 l" sel $end
$upscope $end
$scope module displayDecoder $end
$var wire 1 7 clk $end
$var wire 1 G display_sel $end
$var wire 2 m" dot [1:0] $end
$var wire 2 n" msg [1:0] $end
$var wire 1 8 rst $end
$var wire 1 o" sgn $end
$var wire 1 H wr_enable $end
$var wire 8 p" bin [7:0] $end
$var wire 2 q" LED_activating_counter [1:0] $end
$var reg 5 r" aux [4:0] $end
$var reg 12 s" bcd [11:0] $end
$var reg 8 t" bin_reg [7:0] $end
$var reg 2 u" disp_dot [1:0] $end
$var reg 4 v" disp_select [3:0] $end
$var reg 8 w" disp_value [7:0] $end
$var reg 4 x" j [3:0] $end
$var reg 20 y" refresh_counter [19:0] $end
$upscope $end
$scope module ram $end
$var wire 1 7 clk $end
$var wire 9 z" data_addr [8:0] $end
$var wire 9 {" data_addr_int [8:0] $end
$var wire 1 |" data_en_int $end
$var wire 32 }" data_in [31:0] $end
$var wire 32 ~" data_in_int [31:0] $end
$var wire 32 !# data_out [31:0] $end
$var wire 1 B data_sel $end
$var wire 1 H data_we $end
$var wire 1 "# data_we_int $end
$var wire 1 ## instr_en $end
$var wire 9 $# pc [8:0] $end
$var reg 32 %# data_out_int [31:0] $end
$var reg 32 &# instruction [31:0] $end
$upscope $end
$scope module real_alu $end
$var wire 1 '# alu_done_aux $end
$var wire 1 P alu_sel $end
$var wire 1 7 clk $end
$var wire 1 (# div_sel $end
$var wire 4 )# first_nr [3:0] $end
$var wire 1 *# mult_sel $end
$var wire 4 +# operation [3:0] $end
$var wire 1 8 rst $end
$var wire 4 ,# second_nr [3:0] $end
$var wire 1 -# sum_sel $end
$var wire 1 H wr_enable $end
$var wire 8 .# result_finish_mult [7:0] $end
$var wire 8 /# result_finish_div [7:0] $end
$var wire 8 0# result_finish_adder [7:0] $end
$var wire 1 1# multiply_done $end
$var wire 1 2# done_sum $end
$var wire 1 3# division_done $end
$var reg 1 Q alu_done $end
$var reg 1 4# alu_sel_reg $end
$var reg 4 5# first_nr_reg [3:0] $end
$var reg 4 6# operation_reg [3:0] $end
$var reg 8 7# result_uncoded [7:0] $end
$var reg 4 8# second_nr_reg [3:0] $end
$scope module adder4bits $end
$var wire 4 9# a [3:0] $end
$var wire 4 :# b [3:0] $end
$var wire 1 ;# ci $end
$var wire 1 7 clk $end
$var wire 1 8 rst $end
$var wire 1 -# start $end
$var wire 1 2# done_sum $end
$var wire 1 <# done_aux $end
$var wire 1 =# co $end
$var wire 4 ># aux_sum_final [3:0] $end
$var wire 1 ?# aux3 $end
$var wire 1 @# aux2 $end
$var wire 1 A# aux1 $end
$var reg 4 B# counter [3:0] $end
$var reg 8 C# sum [7:0] $end
$scope module adder0 $end
$var wire 1 D# a $end
$var wire 1 E# b $end
$var wire 1 ;# ci $end
$var wire 1 A# co $end
$var wire 1 F# out_and1 $end
$var wire 1 G# out_and2 $end
$var wire 1 H# out_xor $end
$var wire 1 I# sum $end
$upscope $end
$scope module adder1 $end
$var wire 1 J# a $end
$var wire 1 K# b $end
$var wire 1 A# ci $end
$var wire 1 @# co $end
$var wire 1 L# out_and1 $end
$var wire 1 M# out_and2 $end
$var wire 1 N# out_xor $end
$var wire 1 O# sum $end
$upscope $end
$scope module adder2 $end
$var wire 1 P# a $end
$var wire 1 Q# b $end
$var wire 1 @# ci $end
$var wire 1 ?# co $end
$var wire 1 R# out_and1 $end
$var wire 1 S# out_and2 $end
$var wire 1 T# out_xor $end
$var wire 1 U# sum $end
$upscope $end
$scope module adder3 $end
$var wire 1 V# a $end
$var wire 1 W# b $end
$var wire 1 ?# ci $end
$var wire 1 =# co $end
$var wire 1 X# out_and1 $end
$var wire 1 Y# out_and2 $end
$var wire 1 Z# out_xor $end
$var wire 1 [# sum $end
$upscope $end
$upscope $end
$scope module divide $end
$var wire 4 \# a [3:0] $end
$var wire 4 ]# b [3:0] $end
$var wire 1 7 clk $end
$var wire 1 8 rst $end
$var wire 1 (# start $end
$var wire 4 ^# second_nr_aux [3:0] $end
$var wire 4 _# resto [3:0] $end
$var wire 4 `# quociente_XOR [3:0] $end
$var wire 4 a# quociente [3:0] $end
$var wire 1 b# multiply_done $end
$var wire 4 c# first_nr_aux [3:0] $end
$var wire 1 d# done_valid_xor $end
$var wire 1 e# done_valid $end
$var wire 1 3# done_division $end
$var wire 1 f# done $end
$var reg 4 g# D_aux [3:0] $end
$var reg 8 h# aux_sumy_v2 [7:0] $end
$var reg 1 i# complement_result_sel $end
$var reg 4 j# counter [3:0] $end
$var reg 4 k# divider_aux [3:0] $end
$var reg 8 l# q [7:0] $end
$var reg 1 m# start_aux $end
$scope module div1 $end
$var wire 4 n# D [3:0] $end
$var wire 1 7 clk $end
$var wire 4 o# divider [3:0] $end
$var wire 1 8 rst $end
$var wire 1 m# start $end
$var wire 1 e# valid $end
$var wire 4 p# r [3:0] $end
$var reg 8 q# Dext [7:0] $end
$var reg 3 r# cnt [2:0] $end
$var reg 4 s# q [3:0] $end
$upscope $end
$scope module multiply_comple2 $end
$var wire 1 t# ci $end
$var wire 1 7 clk $end
$var wire 1 u# complement1_sel $end
$var wire 4 v# dumb_0 [3:0] $end
$var wire 4 w# first_nr_reg [3:0] $end
$var wire 1 8 rst $end
$var wire 4 x# second_nr_reg [3:0] $end
$var wire 4 y# second_nr_aux [3:0] $end
$var wire 4 z# first_nr_aux [3:0] $end
$var wire 1 {# complement1_finish_nr2 $end
$var wire 1 |# complement1_finish_nr1 $end
$var reg 1 }# complement1_finish $end
$var reg 4 ~# first_nr [3:0] $end
$var reg 4 !$ second_nr [3:0] $end
$scope module division_complement_first_nr $end
$var wire 4 "$ a [3:0] $end
$var wire 4 #$ a_xor [3:0] $end
$var wire 4 $$ aux_xor [3:0] $end
$var wire 4 %$ b [3:0] $end
$var wire 1 t# ci $end
$var wire 1 7 clk $end
$var wire 1 &$ co $end
$var wire 1 u# complement1_sel $end
$var wire 4 '$ dumby [3:0] $end
$var wire 1 8 rst $end
$var wire 4 ($ sum_aux_v2 [3:0] $end
$var wire 4 )$ sum_aux [3:0] $end
$var wire 1 *$ aux3 $end
$var wire 1 +$ aux2 $end
$var wire 1 ,$ aux1 $end
$var reg 1 |# complement1_finish $end
$var reg 4 -$ sum [3:0] $end
$scope module adder0 $end
$var wire 1 .$ a $end
$var wire 1 /$ b $end
$var wire 1 t# ci $end
$var wire 1 ,$ co $end
$var wire 1 0$ out_and1 $end
$var wire 1 1$ out_and2 $end
$var wire 1 2$ out_xor $end
$var wire 1 3$ sum $end
$upscope $end
$scope module adder1 $end
$var wire 1 4$ a $end
$var wire 1 5$ b $end
$var wire 1 ,$ ci $end
$var wire 1 +$ co $end
$var wire 1 6$ out_and1 $end
$var wire 1 7$ out_and2 $end
$var wire 1 8$ out_xor $end
$var wire 1 9$ sum $end
$upscope $end
$scope module adder2 $end
$var wire 1 :$ a $end
$var wire 1 ;$ b $end
$var wire 1 +$ ci $end
$var wire 1 *$ co $end
$var wire 1 <$ out_and1 $end
$var wire 1 =$ out_and2 $end
$var wire 1 >$ out_xor $end
$var wire 1 ?$ sum $end
$upscope $end
$upscope $end
$scope module division_complement_second_nr $end
$var wire 4 @$ a [3:0] $end
$var wire 4 A$ a_xor [3:0] $end
$var wire 4 B$ aux_xor [3:0] $end
$var wire 4 C$ b [3:0] $end
$var wire 1 t# ci $end
$var wire 1 7 clk $end
$var wire 1 D$ co $end
$var wire 1 u# complement1_sel $end
$var wire 4 E$ dumby [3:0] $end
$var wire 1 8 rst $end
$var wire 4 F$ sum_aux_v2 [3:0] $end
$var wire 4 G$ sum_aux [3:0] $end
$var wire 1 H$ aux3 $end
$var wire 1 I$ aux2 $end
$var wire 1 J$ aux1 $end
$var reg 1 {# complement1_finish $end
$var reg 4 K$ sum [3:0] $end
$scope module adder0 $end
$var wire 1 L$ a $end
$var wire 1 M$ b $end
$var wire 1 t# ci $end
$var wire 1 J$ co $end
$var wire 1 N$ out_and1 $end
$var wire 1 O$ out_and2 $end
$var wire 1 P$ out_xor $end
$var wire 1 Q$ sum $end
$upscope $end
$scope module adder1 $end
$var wire 1 R$ a $end
$var wire 1 S$ b $end
$var wire 1 J$ ci $end
$var wire 1 I$ co $end
$var wire 1 T$ out_and1 $end
$var wire 1 U$ out_and2 $end
$var wire 1 V$ out_xor $end
$var wire 1 W$ sum $end
$upscope $end
$scope module adder2 $end
$var wire 1 X$ a $end
$var wire 1 Y$ b $end
$var wire 1 I$ ci $end
$var wire 1 H$ co $end
$var wire 1 Z$ out_and1 $end
$var wire 1 [$ out_and2 $end
$var wire 1 \$ out_xor $end
$var wire 1 ]$ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module result_div $end
$var wire 4 ^$ a [3:0] $end
$var wire 4 _$ a_xor [3:0] $end
$var wire 4 `$ aux_xor [3:0] $end
$var wire 4 a$ b [3:0] $end
$var wire 1 b$ ci $end
$var wire 1 7 clk $end
$var wire 1 c$ co $end
$var wire 1 e# complement1_sel $end
$var wire 4 d$ dumby [3:0] $end
$var wire 1 8 rst $end
$var wire 4 e$ sum_aux_v2 [3:0] $end
$var wire 4 f$ sum_aux [3:0] $end
$var wire 1 g$ aux3 $end
$var wire 1 h$ aux2 $end
$var wire 1 i$ aux1 $end
$var reg 1 j$ complement1_finish $end
$var reg 4 k$ sum [3:0] $end
$scope module adder0 $end
$var wire 1 l$ a $end
$var wire 1 m$ b $end
$var wire 1 b$ ci $end
$var wire 1 i$ co $end
$var wire 1 n$ out_and1 $end
$var wire 1 o$ out_and2 $end
$var wire 1 p$ out_xor $end
$var wire 1 q$ sum $end
$upscope $end
$scope module adder1 $end
$var wire 1 r$ a $end
$var wire 1 s$ b $end
$var wire 1 i$ ci $end
$var wire 1 h$ co $end
$var wire 1 t$ out_and1 $end
$var wire 1 u$ out_and2 $end
$var wire 1 v$ out_xor $end
$var wire 1 w$ sum $end
$upscope $end
$scope module adder2 $end
$var wire 1 x$ a $end
$var wire 1 y$ b $end
$var wire 1 h$ ci $end
$var wire 1 g$ co $end
$var wire 1 z$ out_and1 $end
$var wire 1 {$ out_and2 $end
$var wire 1 |$ out_xor $end
$var wire 1 }$ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module mult $end
$var wire 4 ~$ a [3:0] $end
$var wire 4 !% b [3:0] $end
$var wire 1 7 clk $end
$var wire 1 8 rst $end
$var wire 1 *# start $end
$var wire 4 "% second_nr_aux [3:0] $end
$var wire 8 #% resulty [7:0] $end
$var wire 1 1# multiply_done $end
$var wire 4 $% first_nr_aux [3:0] $end
$var wire 1 %% done $end
$var reg 8 &% aux_sumy_v2 [7:0] $end
$var reg 8 '% c [7:0] $end
$var reg 1 (% complement_result_sel $end
$var reg 4 )% counter [3:0] $end
$scope module multiply_comple2 $end
$var wire 1 *% ci $end
$var wire 1 7 clk $end
$var wire 1 +% complement1_sel $end
$var wire 4 ,% dumb_0 [3:0] $end
$var wire 4 -% first_nr_reg [3:0] $end
$var wire 1 8 rst $end
$var wire 4 .% second_nr_reg [3:0] $end
$var wire 4 /% second_nr_aux [3:0] $end
$var wire 4 0% first_nr_aux [3:0] $end
$var wire 1 1% complement1_finish_nr2 $end
$var wire 1 2% complement1_finish_nr1 $end
$var reg 1 3% complement1_finish $end
$var reg 4 4% first_nr [3:0] $end
$var reg 4 5% second_nr [3:0] $end
$scope module multiply_complement_first_nr $end
$var wire 4 6% a [3:0] $end
$var wire 4 7% a_xor [3:0] $end
$var wire 4 8% aux_xor [3:0] $end
$var wire 4 9% b [3:0] $end
$var wire 1 *% ci $end
$var wire 1 7 clk $end
$var wire 1 :% co $end
$var wire 1 +% complement1_sel $end
$var wire 4 ;% dumby [3:0] $end
$var wire 1 8 rst $end
$var wire 4 <% sum_aux_v2 [3:0] $end
$var wire 4 =% sum_aux [3:0] $end
$var wire 1 >% aux3 $end
$var wire 1 ?% aux2 $end
$var wire 1 @% aux1 $end
$var reg 1 2% complement1_finish $end
$var reg 4 A% sum [3:0] $end
$scope module adder0 $end
$var wire 1 B% a $end
$var wire 1 C% b $end
$var wire 1 *% ci $end
$var wire 1 @% co $end
$var wire 1 D% out_and1 $end
$var wire 1 E% out_and2 $end
$var wire 1 F% out_xor $end
$var wire 1 G% sum $end
$upscope $end
$scope module adder1 $end
$var wire 1 H% a $end
$var wire 1 I% b $end
$var wire 1 @% ci $end
$var wire 1 ?% co $end
$var wire 1 J% out_and1 $end
$var wire 1 K% out_and2 $end
$var wire 1 L% out_xor $end
$var wire 1 M% sum $end
$upscope $end
$scope module adder2 $end
$var wire 1 N% a $end
$var wire 1 O% b $end
$var wire 1 ?% ci $end
$var wire 1 >% co $end
$var wire 1 P% out_and1 $end
$var wire 1 Q% out_and2 $end
$var wire 1 R% out_xor $end
$var wire 1 S% sum $end
$upscope $end
$upscope $end
$scope module multiply_complement_second_nr $end
$var wire 4 T% a [3:0] $end
$var wire 4 U% a_xor [3:0] $end
$var wire 4 V% aux_xor [3:0] $end
$var wire 4 W% b [3:0] $end
$var wire 1 *% ci $end
$var wire 1 7 clk $end
$var wire 1 X% co $end
$var wire 1 +% complement1_sel $end
$var wire 4 Y% dumby [3:0] $end
$var wire 1 8 rst $end
$var wire 4 Z% sum_aux_v2 [3:0] $end
$var wire 4 [% sum_aux [3:0] $end
$var wire 1 \% aux3 $end
$var wire 1 ]% aux2 $end
$var wire 1 ^% aux1 $end
$var reg 1 1% complement1_finish $end
$var reg 4 _% sum [3:0] $end
$scope module adder0 $end
$var wire 1 `% a $end
$var wire 1 a% b $end
$var wire 1 *% ci $end
$var wire 1 ^% co $end
$var wire 1 b% out_and1 $end
$var wire 1 c% out_and2 $end
$var wire 1 d% out_xor $end
$var wire 1 e% sum $end
$upscope $end
$scope module adder1 $end
$var wire 1 f% a $end
$var wire 1 g% b $end
$var wire 1 ^% ci $end
$var wire 1 ]% co $end
$var wire 1 h% out_and1 $end
$var wire 1 i% out_and2 $end
$var wire 1 j% out_xor $end
$var wire 1 k% sum $end
$upscope $end
$scope module adder2 $end
$var wire 1 l% a $end
$var wire 1 m% b $end
$var wire 1 ]% ci $end
$var wire 1 \% co $end
$var wire 1 n% out_and1 $end
$var wire 1 o% out_and2 $end
$var wire 1 p% out_xor $end
$var wire 1 q% sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module multiply_complement_result $end
$var wire 8 r% a [7:0] $end
$var wire 8 s% a_xor [7:0] $end
$var wire 8 t% aux_xor [7:0] $end
$var wire 8 u% b [7:0] $end
$var wire 1 v% ci $end
$var wire 1 7 clk $end
$var wire 1 w% co $end
$var wire 1 (% complement1_sel $end
$var wire 8 x% dumby [7:0] $end
$var wire 1 8 rst $end
$var wire 8 y% sum_aux [7:0] $end
$var wire 1 z% aux8 $end
$var wire 1 {% aux7 $end
$var wire 1 |% aux6 $end
$var wire 1 }% aux5 $end
$var wire 1 ~% aux4 $end
$var wire 1 !& aux3 $end
$var wire 1 "& aux2 $end
$var wire 1 #& aux1 $end
$var reg 1 $& complement1_finish $end
$var reg 8 %& sum [7:0] $end
$scope module adder0 $end
$var wire 1 && a $end
$var wire 1 '& b $end
$var wire 1 v% ci $end
$var wire 1 #& co $end
$var wire 1 (& out_and1 $end
$var wire 1 )& out_and2 $end
$var wire 1 *& out_xor $end
$var wire 1 +& sum $end
$upscope $end
$scope module adder1 $end
$var wire 1 ,& a $end
$var wire 1 -& b $end
$var wire 1 #& ci $end
$var wire 1 "& co $end
$var wire 1 .& out_and1 $end
$var wire 1 /& out_and2 $end
$var wire 1 0& out_xor $end
$var wire 1 1& sum $end
$upscope $end
$scope module adder2 $end
$var wire 1 2& a $end
$var wire 1 3& b $end
$var wire 1 "& ci $end
$var wire 1 !& co $end
$var wire 1 4& out_and1 $end
$var wire 1 5& out_and2 $end
$var wire 1 6& out_xor $end
$var wire 1 7& sum $end
$upscope $end
$scope module adder3 $end
$var wire 1 8& a $end
$var wire 1 9& b $end
$var wire 1 !& ci $end
$var wire 1 ~% co $end
$var wire 1 :& out_and1 $end
$var wire 1 ;& out_and2 $end
$var wire 1 <& out_xor $end
$var wire 1 =& sum $end
$upscope $end
$scope module adder4 $end
$var wire 1 >& a $end
$var wire 1 ?& b $end
$var wire 1 ~% ci $end
$var wire 1 }% co $end
$var wire 1 @& out_and1 $end
$var wire 1 A& out_and2 $end
$var wire 1 B& out_xor $end
$var wire 1 C& sum $end
$upscope $end
$scope module adder5 $end
$var wire 1 D& a $end
$var wire 1 E& b $end
$var wire 1 }% ci $end
$var wire 1 |% co $end
$var wire 1 F& out_and1 $end
$var wire 1 G& out_and2 $end
$var wire 1 H& out_xor $end
$var wire 1 I& sum $end
$upscope $end
$scope module adder6 $end
$var wire 1 J& a $end
$var wire 1 K& b $end
$var wire 1 |% ci $end
$var wire 1 {% co $end
$var wire 1 L& out_and1 $end
$var wire 1 M& out_and2 $end
$var wire 1 N& out_xor $end
$var wire 1 O& sum $end
$upscope $end
$scope module adder7 $end
$var wire 1 P& a $end
$var wire 1 Q& b $end
$var wire 1 {% ci $end
$var wire 1 z% co $end
$var wire 1 R& out_and1 $end
$var wire 1 S& out_and2 $end
$var wire 1 T& out_xor $end
$var wire 1 U& sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module regf $end
$var wire 4 V& addr [3:0] $end
$var wire 1 7 clk $end
$var wire 32 W& data_in [31:0] $end
$var wire 1 > sel $end
$var wire 1 H we $end
$var wire 32 X& data_out [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx X&
bx W&
bx V&
xU&
xT&
0S&
xR&
0Q&
xP&
xO&
xN&
0M&
xL&
0K&
xJ&
xI&
xH&
0G&
xF&
0E&
xD&
xC&
xB&
0A&
x@&
0?&
x>&
x=&
x<&
0;&
x:&
09&
x8&
x7&
x6&
05&
x4&
03&
x2&
x1&
x0&
0/&
x.&
0-&
x,&
x+&
x*&
0)&
x(&
0'&
x&&
bx %&
x$&
x#&
x"&
x!&
x~%
x}%
x|%
x{%
xz%
bx y%
b0 x%
zw%
1v%
b0 u%
b11111111 t%
bx s%
bx r%
xq%
xp%
0o%
xn%
0m%
xl%
xk%
xj%
0i%
xh%
0g%
xf%
xe%
xd%
0c%
xb%
0a%
x`%
bx _%
x^%
x]%
x\%
bzxxx [%
b0xxx Z%
b0 Y%
zX%
b0 W%
b1111 V%
bx U%
bx T%
xS%
xR%
0Q%
xP%
0O%
xN%
xM%
xL%
0K%
xJ%
0I%
xH%
xG%
xF%
0E%
xD%
0C%
xB%
bx A%
x@%
x?%
x>%
bzxxx =%
b0xxx <%
b0 ;%
z:%
b0 9%
b1111 8%
bx 7%
bx 6%
bx 5%
bx 4%
x3%
x2%
x1%
bx 0%
bx /%
bx .%
bx -%
b0 ,%
1+%
1*%
bx )%
1(%
bx '%
bx &%
x%%
bx $%
bx #%
bx "%
bx !%
bx ~$
x}$
x|$
0{$
xz$
0y$
xx$
xw$
xv$
0u$
xt$
0s$
xr$
xq$
xp$
0o$
xn$
0m$
xl$
bx k$
xj$
xi$
xh$
xg$
bzxxx f$
b0xxx e$
b0 d$
zc$
1b$
b0 a$
b1111 `$
b0xxx _$
b1xxx ^$
x]$
x\$
0[$
xZ$
0Y$
xX$
xW$
xV$
0U$
xT$
0S$
xR$
xQ$
xP$
0O$
xN$
0M$
xL$
bx K$
xJ$
xI$
xH$
bzxxx G$
b0xxx F$
b0 E$
zD$
b0 C$
b1111 B$
bx A$
bx @$
x?$
x>$
0=$
x<$
0;$
x:$
x9$
x8$
07$
x6$
05$
x4$
x3$
x2$
01$
x0$
0/$
x.$
bx -$
x,$
x+$
x*$
bzxxx )$
b0xxx ($
b0 '$
z&$
b0 %$
b1111 $$
bx #$
bx "$
bx !$
bx ~#
x}#
x|#
x{#
bx z#
bx y#
bx x#
bx w#
b0 v#
1u#
1t#
bx s#
bx r#
bx q#
bx p#
bx o#
bx n#
0m#
bx l#
bx k#
bx j#
1i#
bx h#
bx g#
xf#
xe#
xd#
bx c#
xb#
bx a#
bx `#
bx _#
bx ^#
bx ]#
bx \#
x[#
xZ#
xY#
xX#
xW#
xV#
xU#
xT#
xS#
xR#
xQ#
xP#
xO#
xN#
xM#
xL#
xK#
xJ#
xI#
xH#
xG#
0F#
xE#
xD#
bx C#
bx B#
xA#
x@#
x?#
bx >#
x=#
x<#
0;#
bx :#
bx 9#
bx 8#
bx 7#
bx 6#
bx 5#
04#
x3#
x2#
x1#
bx 0#
bx /#
bx .#
x-#
bx ,#
bx +#
x*#
bx )#
x(#
x'#
bx &#
bx %#
bx $#
1##
x"#
bx !#
bx ~"
bx }"
x|"
bx {"
bx z"
bx y"
bx x"
bx w"
bx v"
b0 u"
bx t"
bx s"
bx r"
bx q"
bx p"
0o"
b0 n"
b0 m"
xl"
bx k"
bx j"
bx i"
bx h"
bx g"
b0 f"
bx e"
bx d"
xc"
b0 b"
0a"
0`"
0_"
bx ^"
bx ]"
bx \"
bx ["
bx Z"
xY"
bx X"
b0 W"
xV"
xU"
xT"
xS"
xR"
b0 Q"
xP"
xO"
xN"
xM"
xL"
xK"
xJ"
0I"
xH"
0G"
xF"
xE"
xD"
0C"
xB"
0A"
x@"
x?"
x>"
0="
x<"
0;"
x:"
bx 9"
bx 8"
x7"
x6"
x5"
x4"
bzxxx 3"
bx 2"
z1"
b0 0"
b1111 /"
bx ."
bx -"
x,"
x+"
0*"
x)"
0("
x'"
x&"
x%"
0$"
x#"
0""
x!"
x~
x}
0|
x{
0z
xy
bx x
bx w
xv
xu
xt
xs
bzxxx r
bx q
zp
b0 o
b1111 n
bx m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
xe
xd
bx c
bx b
bx a
b0 `
x_
1^
x]
x\
b0 [
xZ
xY
xX
bx W
bx V
bx U
b11110011 T
bx S
bx R
xQ
xP
xO
xN
xM
bx L
xK
b0 J
bx I
xH
xG
bx F
bx E
xD
bx C
xB
bx A
bx @
bx ?
x>
bx =
bx <
b11110011 ;
bx :
bx 9
08
17
b11110011 6
15
04
bx 3
bx 2
x1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
bx '
bx &
bx %
bx $
bx #
bx "
bx !
$end
#5000
07
#10000
17
#11000
1H$
1\%
1*$
1>%
15"
1t
1Z$
0]$
1n%
0q%
1<$
0?$
1P%
0S%
1H"
0K"
1)"
0,"
1I$
1]%
1+$
1?%
16"
1u
1T$
0W$
1h%
0k%
16$
09$
1J%
0M%
1B"
0E"
1#"
0&"
1J$
b0 F$
1^%
b0 Z%
0U#
0[#
1,$
b0 ($
1@%
b0 <%
17"
1v
1N$
bz000 G$
0Q$
1b%
bz000 [%
0e%
0O#
0@#
0?#
0=#
10$
bz000 )$
03$
1D%
bz000 =%
0G%
1<"
bz000 3"
0?"
1{
bz000 r
0~
b11000000 3
b11000000 S
b11000000 w"
1P$
1V$
1\$
1d%
1j%
1p%
b0 >#
0I#
0A#
0L#
0R#
0X#
12$
18$
1>$
1F%
1L%
1R%
1>"
1D"
1J"
1}
1%"
1+"
b0 r"
b1110 2
b1110 R
b1110 v"
1L$
1R$
1X$
1`%
1f%
1l%
0H#
0G#
0N#
0M#
0T#
0S#
0Z#
0Y#
1.$
14$
1:$
1B%
1H%
1N%
1:"
1@"
1F"
1y
1!"
1'"
b0 ^"
0c"
b0 d"
b0 Z"
b0 k"
b0 a
b0 q"
b1000 x"
b0 s"
0E#
0K#
0Q#
0W#
b1111 A$
b1111 U%
0D#
0J#
0P#
0V#
b1111 #$
b1111 7%
b1111 ."
b0 2"
b1111 m
b0 q
b0 @
b0 g"
b0 $#
b0 ~"
b0 I
b0 X"
b0 }"
b0 W&
b0 h"
b0 i"
b0 j"
b0 y"
b0 t"
02%
b0 0%
b0 A%
01%
b0 /%
b0 _%
b0 "%
b0 5%
b0 $%
b0 4%
03%
0$&
b0 #%
b0 %&
0|#
b0 z#
b0 -$
0{#
b0 y#
b0 K$
b0 ^#
b0 !$
b0 c#
b0 ~#
0}#
0j$
b0 `#
b0 k$
b0 6#
b0 8#
b0 :#
b0 ]#
b0 x#
b0 @$
b0 !%
b0 .%
b0 T%
b0 5#
b0 9#
b0 \#
b0 w#
b0 "$
b0 ~$
b0 -%
b0 6%
0Q
0O
b0 h
b0 k
b0 -"
b0 g
b0 l
18
#15000
07
#20000
1z%
1R&
0U&
1{%
1L&
0O&
1|%
1F&
0I&
1}%
1@&
0C&
1~%
1:&
0=&
b1 ^"
b1 d"
b1 Z"
1!&
b1 f"
14&
07&
b1 J
b1 [
b1 W"
1"&
1.&
01&
1K
b0 ?
b0 U
b0 X&
1#&
b110 V&
b11000110 {"
b11000110 z"
01
0M
0>
0|"
0B
0G
0P
0N
0D
0\
0]
0Y
1Z
1(&
b0 y%
0+&
b1011000110 L
b1011000110 W
b1011000110 e"
0O"
0P"
0-#
0*#
0(#
0l"
1V"
0S"
1*&
10&
16&
1<&
1B&
1H&
1N&
1T&
0'#
b1011000110 ]"
0R"
0N"
0L"
0M"
0"#
0H
0Y"
1U"
0T"
1&&
1,&
12&
18&
1>&
1D&
1J&
1P&
0_
b1000 ["
b11111111 s%
b10000000000000000000001011000110 E
b10000000000000000000001011000110 \"
b10000000000000000000001011000110 &#
b0 0#
b0 C#
0<#
02#
b100 B#
b0 &%
b0 r%
01#
0%%
b100 )%
b0 h#
03#
0d#
0b#
0f#
b100 j#
b0 c
b0 x
0e
0s
b100 w
b0 b
b0 9"
0d
04"
b100 8"
17
#21000
b10101 :
08
#25000
07
#30000
b10 ^"
b10 d"
b0 Z"
b1 Q"
b1 k"
b1 a
b101 8"
b101 w
b101 j#
b101 )%
b1 @
b1 g"
b1 $#
b1 ~"
b1 I
b1 X"
b1 }"
b1 W&
b1 h"
b1 y"
12%
11%
1$&
1|#
1{#
b0 =
b0 p"
b0 7#
17
#35000
07
#40000
0K
b0 J
b0 [
b0 W"
b1 ^"
b1 d"
b1 Z"
b0 Q"
b0 V&
b0 {"
b0 z"
0|"
0B
0Z
1R"
b0 f"
b0 L
b0 W
b0 e"
0V"
b0 ]"
0U"
b1100 ["
b11000000000000000000000000000000 E
b11000000000000000000000000000000 \"
b11000000000000000000000000000000 &#
b110 )%
b110 j#
b110 w
b110 8"
1}#
13%
b10 y"
b10 @
b10 g"
b10 $#
17
#45000
07
#50000
0R"
1P"
1L"
1S"
1M"
b0 ["
b0 ^"
b0 d"
b0 Z"
b0 k"
b0 a
b111 8"
b111 w
1f#
b111 j#
1%%
b111 )%
b0 E
b0 \"
b0 &#
b11 @
b11 g"
b11 $#
b0 ~"
b0 I
b0 X"
b0 }"
b0 W&
b0 h"
b11 y"
17
#55000
07
#60000
b11110011 ^"
b11110011 d"
b11110011 Z"
b11110011 f"
b11110011 J
b11110011 [
b11110011 W"
1]
1K
b11000000 {"
b11000000 z"
0P"
b1011000000 L
b1011000000 W
b1011000000 e"
0O"
0L"
0S"
1V"
1'#
b1011000000 ]"
0M"
1U"
b1000 ["
b10000000000000000000001011000000 E
b10000000000000000000001011000000 \"
b10000000000000000000001011000000 &#
11#
0%%
b1000 )%
b0 .#
b0 '%
1b#
0f#
b1000 j#
b1000 w
b1000 8"
b100 y"
b100 @
b100 g"
b100 $#
17
#65000
07
#70000
bx ?
bx U
bx X&
b0 {"
b0 z"
1>
0]
0'#
b1000000000 L
b1000000000 W
b1000000000 e"
0V"
b1000000000 ]"
1"#
1H
1Y"
0U"
b0 f"
b1001 ["
b11110011 ^"
b11110011 d"
b11110011 Z"
b0 Q"
b11110011 k"
b11110011 a
bx J
bx [
bx W"
b1001 8"
b1001 w
0b#
b1001 j#
01#
b1001 )%
b10010000000000000000001000000000 E
b10010000000000000000001000000000 \"
b10010000000000000000001000000000 &#
b101 @
b101 g"
b101 $#
b11110011 ~"
b11110011 I
b11110011 X"
b11110011 }"
b11110011 W&
b11110011 h"
b101 y"
1Q
17
#71000
bx J
bx [
bx W"
14
05
b100 6
b100 ;
b100 T
#75000
07
#80000
b11110100 ^"
b11110100 d"
b11110010 Z"
b1 Q"
b1010 V&
b11001010 {"
b11001010 z"
1Y
0>
b1 f"
b1011001010 L
b1011001010 W
b1011001010 e"
1V"
b1011001010 ]"
0"#
0H
0Y"
1U"
b1000 ["
b0 ?
b0 U
b0 X&
b1 J
b1 [
b1 W"
b10000000000000000000001011001010 E
b10000000000000000000001011001010 \"
b10000000000000000000001011001010 &#
b11110011 !
b1010 )%
1d#
b1010 j#
b1010 w
b1010 8"
0Q
b110 y"
b110 @
b110 g"
b110 $#
17
#85000
07
#90000
0K
b0 J
b0 [
b0 W"
b0 Q"
b101 V&
b101 {"
b101 z"
0|"
0B
0Y
1R"
b0 f"
b101 L
b101 W
b101 e"
0V"
1'#
b101 ]"
0U"
b1100 ["
b1 ^"
b1 d"
b1 Z"
b1 k"
b1 a
b1011 8"
b1011 w
b0xxxx /#
b0xxxx l#
13#
0d#
b1011 j#
b11000000000000000000000000000101 E
b11000000000000000000000000000101 \"
b11000000000000000000000000000101 &#
b111 @
b111 g"
b111 $#
b1 ~"
b1 I
b1 X"
b1 }"
b1 W&
b1 h"
b111 y"
17
#95000
07
#100000
b0 V&
b0 {"
b0 z"
0R"
1P"
b0 L
b0 W
b0 e"
1L"
1S"
b0 ]"
1M"
0'#
b0 ["
b0 ^"
b0 d"
b0 Z"
b0 k"
b0 a
b0 E
b0 \"
b0 &#
03#
b1100 j#
b1100 w
b1100 8"
1Q
b1000 y"
b0 ~"
b0 I
b0 X"
b0 }"
b0 W&
b0 h"
b1000 @
b1000 g"
b1000 $#
17
#105000
07
#110000
b100 ^"
b100 d"
b100 Z"
b100 f"
b100 J
b100 [
b100 W"
1\
1K
b1110 V&
b11001110 {"
b11001110 z"
0P"
b1011001110 L
b1011001110 W
b1011001110 e"
0O"
0L"
0S"
1V"
b1011001110 ]"
0M"
1U"
b1000 ["
b1101 8"
b1101 w
b10000000000000000000001011001110 E
b10000000000000000000001011001110 \"
b10000000000000000000001011001110 &#
b1001 @
b1001 g"
b1001 $#
b1001 y"
0Q
17
#115000
07
#120000
bx ?
bx U
bx X&
bx J
bx [
bx W"
b1 V&
b1 {"
b1 z"
1>
0\
b0 f"
b1000000001 L
b1000000001 W
b1000000001 e"
0V"
b1000000001 ]"
1"#
1H
1Y"
0U"
b1001 ["
b100 ^"
b100 d"
b100 Z"
b0 Q"
b100 k"
b100 a
b10010000000000000000001000000001 E
b10010000000000000000001000000001 \"
b10010000000000000000001000000001 &#
b1110 w
b1110 8"
b1010 y"
b100 ~"
b100 I
b100 X"
b100 }"
b100 W&
b100 h"
b1010 @
b1010 g"
b1010 $#
17
#125000
07
#130000
b11110111 ^"
b11110111 d"
b11110111 Z"
b0 Q"
b0 V&
b0 {"
b0 z"
1>
b11110011 f"
b1000000000 L
b1000000000 W
b1000000000 e"
1V"
b11110011 J
b11110011 [
b11110011 W"
b1000000000 ]"
0"#
0H
0Y"
1U"
b11110011 ?
b11110011 U
b11110011 X&
b1000 ["
b1111 8"
b1111 w
b100 "
b10000000000000000000001000000000 E
b10000000000000000000001000000000 \"
b10000000000000000000001000000000 &#
b1011 @
b1011 g"
b1011 $#
b1011 y"
17
#135000
07
#140000
1c"
0K
b0 J
b0 [
b0 W"
b0 ?
b0 U
b0 X&
b1111 V&
b111111111 {"
b111111111 z"
01
0>
1P"
b11111111111111111111111111111111 f"
b1111111111 L
b1111111111 W
b1111111111 e"
1S"
0V"
b11111111111111111111111111111111 ]"
1M"
0U"
b111100110 b"
b11 ["
b11110010 ^"
b10000000000000000000000011110010 d"
b11111111111111111111111100001100 Z"
b11110011 Q"
b11110011 k"
b11110011 a
b111111111111111111111111111111 E
b111111111111111111111111111111 \"
b111111111111111111111111111111 &#
b0 w
b0 8"
b1100 y"
b11110011 ~"
b11110011 I
b11110011 X"
b11110011 }"
b11110011 W&
b11110011 h"
b1100 @
b1100 g"
b1100 $#
17
#145000
07
#150000
b1111001100 b"
b111100101 ^"
b10000000000000000000000111100101 d"
b11111111111111111111111000011001 Z"
b111100110 Q"
b11100110 k"
b111100110 a
14"
b1 8"
1s
b1 w
b1101 @
b1101 g"
b1101 $#
b111100110 ~"
b111100110 I
b111100110 X"
b111100110 }"
b111100110 W&
b111100110 h"
b1101 y"
17
#155000
07
#160000
1_
b11110011000 b"
b1111001011 ^"
b10000000000000000000001111001011 d"
b11111111111111111111110000110011 Z"
b1111001100 Q"
b11001100 k"
b1111001100 a
1e
0s
b10 w
1d
04"
b10 8"
b1110 y"
b1111001100 ~"
b1111001100 I
b1111001100 X"
b1111001100 }"
b1111001100 W&
b1111001100 h"
b1110 @
b1110 g"
b1110 $#
17
#165000
07
#170000
0_
b111100110000 b"
b11110010111 ^"
b10000000000000000000011110010111 d"
b11111111111111111111100001100111 Z"
b11110011000 Q"
b10011000 k"
b11110011000 a
0d
b11 8"
0e
b11 w
b1111 @
b1111 g"
b1111 $#
b11110011000 ~"
b11110011000 I
b11110011000 X"
b11110011000 }"
b11110011000 W&
b11110011000 h"
b1111 y"
b0 A
b0 i
b0 +#
b0 <
b0 j
b0 ,#
b0 F
b0 f
b0 )#
1O
17
#175000
07
#180000
b100 J
b100 [
b100 W"
b100 ?
b100 U
b100 X&
1>
1K
0c"
b1 V&
b1 {"
b1 z"
b100 f"
b1000000001 L
b1000000001 W
b1000000001 e"
1O"
0S"
b1000000001 ]"
1N"
0M"
0`"
b101 ["
b111100110100 b"
b111100110100 ^"
b111100110100 d"
b111100110100 Z"
b0 Q"
b110000 k"
b111100110000 a
b1010000000000000000001000000001 E
b1010000000000000000001000000001 \"
b1010000000000000000001000000001 &#
b100 w
b100 8"
0O
b10000 y"
b111100110000 ~"
b111100110000 I
b111100110000 X"
b111100110000 }"
b111100110000 W&
b111100110000 h"
b10000 @
b10000 g"
b10000 $#
17
#185000
07
#190000
b0 J
b0 [
b0 W"
b0 ?
b0 U
b0 X&
b10 V&
b11010010 {"
b11010010 z"
1N
0>
0P"
b0 f"
b1011010010 L
b1011010010 W
b1011010010 e"
0O"
b1011010010 ]"
0N"
1"#
1H
1Y"
b1001 ["
b0 b"
b111100110100 ^"
b111100110100 d"
b111100110100 Z"
b0 Q"
b110100 k"
b111100110100 a
b101 8"
b101 w
b10010000000000000000001011010010 E
b10010000000000000000001011010010 \"
b10010000000000000000001011010010 &#
b10001 @
b10001 g"
b10001 $#
b111100110100 ~"
b111100110100 I
b111100110100 X"
b111100110100 }"
b111100110100 W&
b111100110100 h"
b10001 y"
17
#195000
07
#200000
05"
0H"
1K"
1X
07"
06"
b101 2"
0v
0u
0t
b110 V&
b11010110 {"
b11010110 z"
1P
0N
0<"
1?"
0B"
bz101 3"
0E"
0{
1~
0#"
0&"
0)"
bz001 r
0,"
b1011010110 L
b1011010110 W
b1011010110 e"
1V"
0>"
0D"
0}
0%"
0+"
b1011010110 ]"
0"#
0H
0Y"
1U"
0:"
0@"
0y
0!"
0'"
b1000 ["
b1100 ."
b0 m
b1001 q
b10000000000000000000001011010110 E
b10000000000000000000001011010110 \"
b10000000000000000000001011010110 &#
b0 w
b0 8"
b100 h
b11 k
b11 -"
b1111 g
b1111 l
b10010 y"
b10010 @
b10010 g"
b10010 $#
17
#205000
07
#210000
0K
b0 J
b0 [
b0 W"
b1 V&
b10001 {"
b10001 z"
0|"
0B
0P
1R"
b10001 L
b10001 W
b10001 e"
0V"
b10001 ]"
0U"
b1100 ["
b0 ^"
b0 d"
b0 Z"
b0 k"
b0 a
14"
b1 8"
1s
b1 w
b11000000000000000000000000010001 E
b11000000000000000000000000010001 \"
b11000000000000000000000000010001 &#
b10011 @
b10011 g"
b10011 $#
b0 ~"
b0 I
b0 X"
b0 }"
b0 W&
b0 h"
b10011 y"
17
#215000
07
#220000
b0 V&
b0 {"
b0 z"
0R"
1`"
b11111111111111111111111111111111 b"
1P"
b0 L
b0 W
b0 e"
1L"
1S"
b0 ]"
1M"
1_
b0 ["
b11111111111111111111111111111111 ^"
b1111111111111111111111111111111 d"
b11111111111111111111111111111111 Z"
b11111111 k"
b111111111111 a
b0 E
b0 \"
b0 &#
1e
0s
b10 w
b1001 c
b1001 x
1d
04"
b10 8"
b11 b
b11 9"
b10100 y"
b11111111111111111111111111111111 ~"
b11111111111111111111111111111111 I
b11111111111111111111111111111111 X"
b11111111111111111111111111111111 }"
b11111111111111111111111111111111 W&
b11111111111111111111111111111111 h"
b10001 @
b10001 g"
b10001 $#
17
#225000
07
#230000
b0 ^"
1c"
b10000000000000000000000000000000 d"
b11111111111111111111111111111110 Z"
b1 Q"
b1 f"
b1 J
b1 [
b1 W"
1P
1K
b110 V&
b11010110 {"
b11010110 z"
0P"
b1011010110 L
b1011010110 W
b1011010110 e"
0O"
0L"
0S"
1V"
0_
b1011010110 ]"
0M"
1U"
0`"
b0 b"
b1000 ["
0d
b11 8"
0e
b11 w
b10000000000000000000001011010110 E
b10000000000000000000001011010110 \"
b10000000000000000000001011010110 &#
b10010 @
b10010 g"
b10010 $#
b100 j"
b10101 y"
b100 A
b100 i
b100 +#
b11 <
b11 j
b11 ,#
b1001 F
b1001 f
b1001 )#
1O
17
#235000
07
#240000
0K
b1 V&
b10001 {"
b10001 z"
0|"
0B
0P
1R"
b10001 L
b10001 W
b10001 e"
0V"
b0 Q"
b10001 ]"
0U"
b0 f"
b1100 ["
b0 J
b0 [
b0 W"
b1 ^"
0c"
b1 d"
b1 Z"
b1 k"
b1 a
b11000000000000000000000000010001 E
b11000000000000000000000000010001 \"
b11000000000000000000000000010001 &#
b100 w
b100 8"
0O
b10110 y"
b1 ~"
b1 I
b1 X"
b1 }"
b1 W&
b1 h"
b10011 @
b10011 g"
b10011 $#
17
#245000
07
#250000
b0 V&
b0 {"
b0 z"
0R"
1P"
b0 L
b0 W
b0 e"
1L"
1S"
b0 ]"
1M"
b0 ["
b0 ^"
b0 d"
b0 Z"
b0 k"
b0 a
b101 8"
b101 w
b0 E
b0 \"
b0 &#
b10100 @
b10100 g"
b10100 $#
b0 ~"
b0 I
b0 X"
b0 }"
b0 W&
b0 h"
b10111 y"
17
#255000
07
#260000
1(#
1P
1K
b110 V&
b11010110 {"
b11010110 z"
0P"
b1011010110 L
b1011010110 W
b1011010110 e"
0O"
0L"
0S"
b1011010110 ]"
0M"
1"#
1H
1Y"
b1001 ["
b10010000000000000000001011010110 E
b10010000000000000000001011010110 \"
b10010000000000000000001011010110 &#
b110 w
b110 8"
b11000 y"
b0 j"
b10101 @
b10101 g"
b10101 $#
17
#265000
07
#270000
0*$
0>%
0<$
1?$
0P%
1S%
0H$
0\%
0+$
0?%
0Z$
1]$
0n%
1q%
06$
19$
0J%
1M%
1U#
0J$
0I$
b101 F$
0^%
0]%
b101 Z%
0,$
b111 ($
0@%
b111 <%
b1010 V&
b11011010 {"
b11011010 z"
1G
0P
1@#
0N$
1Q$
0T$
bz101 G$
0W$
0b%
1e%
0h%
bz101 [%
0k%
00$
bz111 )$
13$
0D%
bz111 =%
1G%
b1011011010 L
b1011011010 W
b1011011010 e"
0(#
1V"
1L#
0P$
0V$
0d%
0j%
1A#
b1100 >#
1[#
02$
0F%
b1011011010 ]"
0"#
0H
0Y"
1U"
1N#
0L$
0R$
0`%
0f%
1G#
1Z#
0.$
0B%
b1000 ["
1E#
1K#
b1100 A$
b1100 U%
1D#
1V#
b110 #$
b110 7%
b111 8"
b111 w
b0 j#
b10000000000000000000001011011010 E
b10000000000000000000001011011010 \"
b10000000000000000000001011011010 &#
b10110 @
b10110 g"
b10110 $#
b11001 y"
b100 6#
b11 8#
b11 :#
b11 ]#
b11 x#
b11 @$
b11 !%
b11 .%
b11 T%
b1001 5#
b1001 9#
b1001 \#
b1001 w#
b1001 "$
b1001 ~$
b1001 -%
b1001 6%
14#
17
#275000
07
#280000
0K
b0 J
b0 [
b0 W"
b101 V&
b10101 {"
b10101 z"
0|"
0B
0G
1R"
b10101 L
b10101 W
b10101 e"
0V"
b10101 ]"
0U"
b1100 ["
b11000000000000000000000000010101 E
b11000000000000000000000000010101 \"
b11000000000000000000000000010101 &#
b1 j#
b1000 w
b1000 8"
04#
b11 y#
b11 K$
b111 z#
b111 -$
b11 /%
b11 _%
b111 0%
b111 A%
b11010 y"
b10111 @
b10111 g"
b10111 $#
17
#285000
07
#290000
b0 V&
b0 {"
b0 z"
0R"
1`"
b11111111111111111111111111111111 b"
1P"
b0 L
b0 W
b0 e"
1L"
1S"
b0 ]"
1M"
b0 ["
b11111111111111111111111111111111 ^"
b1111111111111111111111111111111 d"
b11111111111111111111111111111111 Z"
b11111111 k"
b111111111111 a
b1001 8"
b1001 w
b10 j#
b0 E
b0 \"
b0 &#
b10101 @
b10101 g"
b10101 $#
b11111111111111111111111111111111 ~"
b11111111111111111111111111111111 I
b11111111111111111111111111111111 X"
b11111111111111111111111111111111 }"
b11111111111111111111111111111111 W&
b11111111111111111111111111111111 h"
b11011 y"
b11 "%
b11 5%
b111 $%
b111 4%
b11 ^#
b11 !$
b111 c#
b111 ~#
17
#295000
07
#300000
1G
1K
b1010 V&
b11011010 {"
b11011010 z"
0P"
b1011011010 L
b1011011010 W
b1011011010 e"
0O"
0L"
0S"
1V"
b1011011010 ]"
0M"
1U"
0`"
b0 b"
b1000 ["
b10000000000000000000001011011010 E
b10000000000000000000001011011010 \"
b10000000000000000000001011011010 &#
b11 j#
1m#
b11 k#
b11 o#
b111 g#
b111 n#
b1010 w
b1010 8"
b11100 y"
b100 j"
b10110 @
b10110 g"
b10110 $#
17
#305000
07
#310000
0w$
0}$
0i$
b1 e$
0h$
0g$
0K
0n$
bz001 f$
1q$
0t$
0z$
b0 J
b0 [
b0 W"
0p$
0v$
0|$
b101 V&
b10101 {"
b10101 z"
0|"
0B
0G
1R"
0l$
0r$
0x$
b10101 L
b10101 W
b10101 e"
0V"
b0 _$
b10101 ]"
0U"
b1111 ^$
b1100 ["
b0 ^"
b0 d"
b0 Z"
b0 k"
b0 a
b1011 8"
b1011 w
0m#
b100 j#
0e#
b100 r#
b1111 a#
b1111 s#
b11000000000000000000000000010101 E
b11000000000000000000000000010101 \"
b11000000000000000000000000010101 &#
b10111 @
b10111 g"
b10111 $#
b0 ~"
b0 I
b0 X"
b0 }"
b0 W&
b0 h"
b11101 y"
17
#315000
07
#320000
b0 V&
b0 {"
b0 z"
0R"
1`"
b11111111111111111111111111111111 b"
1P"
b0 L
b0 W
b0 e"
1L"
1S"
b0 ]"
1M"
b0 ["
b111 _#
b111 p#
b11111111111111111111111111111111 ^"
b1111111111111111111111111111111 d"
b11111111111111111111111111111111 Z"
b11111111 k"
b111111111111 a
b0 E
b0 \"
b0 &#
b11 r#
b111 q#
b101 j#
b1100 w
b1100 8"
b11110 y"
b11111111111111111111111111111111 ~"
b11111111111111111111111111111111 I
b11111111111111111111111111111111 X"
b11111111111111111111111111111111 }"
b11111111111111111111111111111111 W&
b11111111111111111111111111111111 h"
b10101 @
b10101 g"
b10101 $#
17
#325000
07
#330000
1G
1K
b1010 V&
b11011010 {"
b11011010 z"
0P"
b1011011010 L
b1011011010 W
b1011011010 e"
0O"
0L"
0S"
1V"
b1011011010 ]"
0M"
1U"
0`"
b0 b"
b1000 ["
b1101 8"
b1101 w
b110 j#
b10 r#
b111 a#
b111 s#
b10000000000000000000001011011010 E
b10000000000000000000001011011010 \"
b10000000000000000000001011011010 &#
b10110 @
b10110 g"
b10110 $#
b11111 y"
17
#335000
07
#340000
0K
b101 e$
b0 J
b0 [
b0 W"
bz101 f$
1}$
b101 V&
b10101 {"
b10101 z"
0|"
0B
0G
1R"
1|$
b10101 L
b10101 W
b10101 e"
0V"
1x$
b10101 ]"
0U"
b100 _$
b1100 ["
b1011 ^$
b0 ^"
b0 d"
b0 Z"
b0 k"
b0 a
b11000000000000000000000000010101 E
b11000000000000000000000000010101 \"
b11000000000000000000000000010101 &#
b1 r#
b11 a#
b11 s#
1f#
b111 j#
b1110 w
b1110 8"
b100000 y"
b0 ~"
b0 I
b0 X"
b0 }"
b0 W&
b0 h"
b10111 @
b10111 g"
b10111 $#
17
#345000
07
#350000
b0 V&
b0 {"
b0 z"
0R"
1`"
b11111111111111111111111111111111 b"
1P"
b0 L
b0 W
b0 e"
1L"
1S"
b0 ]"
1M"
b1 _#
b1 p#
b0 ["
b11111111111111111111111111111111 ^"
b1111111111111111111111111111111 d"
b11111111111111111111111111111111 Z"
b11111111 k"
b111111111111 a
b1111 8"
b1111 w
1b#
0f#
b1000 j#
b0 r#
b1 q#
b0 E
b0 \"
b0 &#
b10101 @
b10101 g"
b10101 $#
b11111111111111111111111111111111 ~"
b11111111111111111111111111111111 I
b11111111111111111111111111111111 X"
b11111111111111111111111111111111 }"
b11111111111111111111111111111111 W&
b11111111111111111111111111111111 h"
b100001 y"
17
#355000
07
#360000
1G
1w$
1K
1i$
b110 e$
1n$
bz110 f$
0q$
b1010 V&
b11011010 {"
b11011010 z"
0P"
1p$
b1011011010 L
b1011011010 W
b1011011010 e"
0O"
0L"
0S"
1V"
1l$
b1011011010 ]"
0M"
1U"
0`"
b0 b"
b101 _$
b1000 ["
b1010 ^$
b10000000000000000000001011011010 E
b10000000000000000000001011011010 \"
b10000000000000000000001011011010 &#
1e#
b111 r#
b10 a#
b10 s#
0b#
b1001 j#
b0 w
b0 8"
b100010 y"
b10110 @
b10110 g"
b10110 $#
17
#365000
07
#370000
0K
b0 J
b0 [
b0 W"
b101 V&
b10101 {"
b10101 z"
0|"
0B
0G
1R"
b10101 L
b10101 W
b10101 e"
0V"
b10101 ]"
0U"
b1100 ["
b0 ^"
b0 d"
b0 Z"
b0 k"
b0 a
14"
b1 8"
1s
b1 w
1d#
b1010 j#
b11000000000000000000000000010101 E
b11000000000000000000000000010101 \"
b11000000000000000000000000010101 &#
b10111 @
b10111 g"
b10111 $#
b0 ~"
b0 I
b0 X"
b0 }"
b0 W&
b0 h"
b100011 y"
1j$
b110 `#
b110 k$
17
#375000
07
#380000
b0 V&
b0 {"
b0 z"
0R"
1`"
b11111111111111111111111111111111 b"
1P"
b0 L
b0 W
b0 e"
1L"
1S"
b0 ]"
1M"
1'#
1_
b0 ["
b11111111111111111111111111111111 ^"
b1111111111111111111111111111111 d"
b11111111111111111111111111111111 Z"
b11111111 k"
b111111111111 a
b0 E
b0 \"
b0 &#
13#
0d#
b1011 j#
b11111110 /#
b11111110 l#
1e
0s
b10 w
1d
04"
b10 8"
b100100 y"
b11111111111111111111111111111111 ~"
b11111111111111111111111111111111 I
b11111111111111111111111111111111 X"
b11111111111111111111111111111111 }"
b11111111111111111111111111111111 W&
b11111111111111111111111111111111 h"
b10101 @
b10101 g"
b10101 $#
17
#385000
07
#390000
b0 ^"
1c"
b10000000000000000000000000000000 d"
b11111111111111111111111111111110 Z"
b1 Q"
b1 f"
b1 J
b1 [
b1 W"
1G
1K
b1010 V&
b11011010 {"
b11011010 z"
0P"
b1011011010 L
b1011011010 W
b1011011010 e"
0O"
0L"
0S"
1V"
0_
0'#
b1011011010 ]"
0M"
1U"
0`"
b0 b"
b1000 ["
0d
b11 8"
0e
b11 w
03#
b1100 j#
b10000000000000000000001011011010 E
b10000000000000000000001011011010 \"
b10000000000000000000001011011010 &#
b10110 @
b10110 g"
b10110 $#
b100101 y"
b11111110 =
b11111110 p"
b11111110 7#
1Q
1O
17
#395000
07
#400000
0K
b101 V&
b10101 {"
b10101 z"
0|"
0B
0G
1R"
b10101 L
b10101 W
b10101 e"
0V"
b0 Q"
b10101 ]"
0U"
b0 f"
b1100 ["
b0 J
b0 [
b0 W"
b1 ^"
0c"
b1 d"
b1 Z"
b1 k"
b1 a
b11000000000000000000000000010101 E
b11000000000000000000000000010101 \"
b11000000000000000000000000010101 &#
b100 w
b100 8"
0O
0Q
b100110 y"
b1 ~"
b1 I
b1 X"
b1 }"
b1 W&
b1 h"
b10111 @
b10111 g"
b10111 $#
17
#405000
07
#410000
b0 V&
b0 {"
b0 z"
0R"
1P"
b0 L
b0 W
b0 e"
1L"
1S"
b0 ]"
1M"
b0 ["
b0 ^"
b0 d"
b0 Z"
b0 k"
b0 a
b101 8"
b101 w
b0 E
b0 \"
b0 &#
b11000 @
b11000 g"
b11000 $#
b0 ~"
b0 I
b0 X"
b0 }"
b0 W&
b0 h"
b100111 y"
17
#415000
07
#420000
1G
1K
b1010 V&
b11011010 {"
b11011010 z"
0P"
b1011011010 L
b1011011010 W
b1011011010 e"
0O"
0L"
0S"
b1011011010 ]"
0M"
1"#
1H
1Y"
b1001 ["
b10010000000000000000001011011010 E
b10010000000000000000001011011010 \"
b10010000000000000000001011011010 &#
b110 w
b110 8"
b101000 y"
b0 j"
b11001 @
b11001 g"
b11001 $#
17
#425000
07
#430000
0K
b0 J
b0 [
b0 W"
b1001 V&
b11001 {"
b11001 z"
0|"
0B
0G
1R"
b11001 L
b11001 W
b11001 e"
b10011001 3
b10011001 S
b10011001 w"
b11001 ]"
0"#
0H
0Y"
b100 r"
b1100 ["
b1001010100 s"
b1000 x"
b111 8"
b111 w
b11000000000000000000000000011001 E
b11000000000000000000000000011001 \"
b11000000000000000000000000011001 &#
b11010 @
b11010 g"
b11010 $#
b11111110 t"
b0 y"
17
#435000
07
#440000
b0 V&
b0 {"
b0 z"
0R"
1`"
b11111111111111111111111111111111 b"
1P"
b0 L
b0 W
b0 e"
1L"
1S"
b0 ]"
1M"
b0 ["
b11111111111111111111111111111111 ^"
b1111111111111111111111111111111 d"
b11111111111111111111111111111111 Z"
b11111111 k"
b111111111111 a
b0 E
b0 \"
b0 &#
b1000 w
b1000 8"
b1 y"
b11111111111111111111111111111111 ~"
b11111111111111111111111111111111 I
b11111111111111111111111111111111 X"
b11111111111111111111111111111111 }"
b11111111111111111111111111111111 W&
b11111111111111111111111111111111 h"
b11001 @
b11001 g"
b11001 $#
17
#445000
07
#450000
b0 J
b0 [
b0 W"
0|"
0B
0K
b1001 V&
b11001 {"
b11001 z"
1R"
0P"
b11001 L
b11001 W
b11001 e"
0O"
0L"
0S"
b11001 ]"
0M"
0`"
b0 b"
b1100 ["
b1001 8"
b1001 w
b11000000000000000000000000011001 E
b11000000000000000000000000011001 \"
b11000000000000000000000000011001 &#
b11010 @
b11010 g"
b11010 $#
b100 j"
b10 y"
17
#455000
07
#460000
b0 V&
b0 {"
b0 z"
0R"
1`"
b11111111111111111111111111111110 b"
1P"
b0 L
b0 W
b0 e"
1L"
1S"
b0 ]"
1M"
b0 ["
b11111111111111111111111111111110 ^"
b1111111111111111111111111111110 d"
b11111111111111111111111111111110 Z"
b11111110 k"
b111111111110 a
b0 E
b0 \"
b0 &#
b1010 w
b1010 8"
b11 y"
b11111111111111111111111111111110 ~"
b11111111111111111111111111111110 I
b11111111111111111111111111111110 X"
b11111111111111111111111111111110 }"
b11111111111111111111111111111110 W&
b11111111111111111111111111111110 h"
b11011 @
b11011 g"
b11011 $#
17
#465000
07
#470000
b1011 8"
b1011 w
b11100 @
b11100 g"
b11100 $#
b100 y"
17
#475000
07
#480000
b1100 w
b1100 8"
b101 y"
b11101 @
b11101 g"
b11101 $#
17
#485000
07
#490000
b1101 8"
b1101 w
b11110 @
b11110 g"
b11110 $#
b110 y"
17
#495000
07
#500000
b1110 w
b1110 8"
b111 y"
b11111 @
b11111 g"
b11111 $#
17
#505000
07
#510000
b1111 8"
b1111 w
b100000 @
b100000 g"
b100000 $#
b1000 y"
17
#515000
07
#520000
b0 w
b0 8"
b1001 y"
b100001 @
b100001 g"
b100001 $#
17
#525000
07
#530000
14"
b1 8"
1s
b1 w
b100010 @
b100010 g"
b100010 $#
b1010 y"
17
#535000
07
#540000
1_
1e
0s
b10 w
1d
04"
b10 8"
b1011 y"
b100011 @
b100011 g"
b100011 $#
17
#545000
07
#550000
0_
0d
b11 8"
0e
b11 w
b100100 @
b100100 g"
b100100 $#
b1100 y"
1O
17
#555000
07
#560000
b100 w
b100 8"
0O
b1101 y"
b100101 @
b100101 g"
b100101 $#
17
#565000
07
#570000
b101 8"
b101 w
b100110 @
b100110 g"
b100110 $#
b1110 y"
17
#571000
