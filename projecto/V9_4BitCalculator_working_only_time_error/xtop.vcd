$date
	Tue Jan 21 17:09:12 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module xtop_tb $end
$var wire 32 ! r0 [31:0] $end
$var wire 32 " r1 [31:0] $end
$var wire 32 # r10 [31:0] $end
$var wire 32 $ r11 [31:0] $end
$var wire 32 % r12 [31:0] $end
$var wire 32 & r13 [31:0] $end
$var wire 32 ' r14 [31:0] $end
$var wire 32 ( r15 [31:0] $end
$var wire 32 ) r2 [31:0] $end
$var wire 32 * r3 [31:0] $end
$var wire 32 + r4 [31:0] $end
$var wire 32 , r5 [31:0] $end
$var wire 32 - r6 [31:0] $end
$var wire 32 . r7 [31:0] $end
$var wire 32 / r8 [31:0] $end
$var wire 32 0 r9 [31:0] $end
$var wire 1 1 trap $end
$var wire 4 2 Disp_sel [3:0] $end
$var wire 8 3 Disp [7:0] $end
$var reg 1 4 Btn2 $end
$var reg 1 5 Btn3 $end
$var reg 8 6 Sw [7:0] $end
$var reg 1 7 clk $end
$var reg 1 8 rst $end
$var integer 32 9 k [31:0] $end
$var integer 32 : start_time [31:0] $end
$scope module uut $end
$var wire 1 4 Btn2 $end
$var wire 1 5 Btn3 $end
$var wire 8 ; Sw [7:0] $end
$var wire 1 7 clk $end
$var wire 1 8 rst $end
$var wire 1 1 trap $end
$var wire 1 < sgn $end
$var wire 4 = second_nr [3:0] $end
$var wire 8 > result_uncoded [7:0] $end
$var wire 1 ? regf_sel $end
$var wire 32 @ regf_data_to_rd [31:0] $end
$var wire 9 A pc [8:0] $end
$var wire 4 B operation [3:0] $end
$var wire 1 C mem_sel $end
$var wire 32 D mem_data_to_rd [31:0] $end
$var wire 1 E led0_sel $end
$var wire 32 F instruction [31:0] $end
$var wire 4 G first_nr [3:0] $end
$var wire 8 H final_result_uncoded [7:0] $end
$var wire 1 I final_result_convert_sel $end
$var wire 1 J final_result_convert_finish $end
$var wire 1 K display_sel $end
$var wire 1 L data_we $end
$var wire 32 M data_to_wr [31:0] $end
$var wire 32 N data_to_rd [31:0] $end
$var wire 1 O data_sel $end
$var wire 10 P data_addr [9:0] $end
$var wire 1 Q cprt_sel $end
$var wire 1 R complement2_sel $end
$var wire 1 S complement2_finish $end
$var wire 1 T alu_sel $end
$var wire 1 U alu_finish $end
$var wire 4 V Disp_sel [3:0] $end
$var wire 8 W Disp [7:0] $end
$scope module addr_decoder $end
$var wire 1 4 btn2_data_to_read $end
$var wire 1 5 btn3_data_to_read $end
$var wire 8 X sw_data_to_read [7:0] $end
$var wire 1 O sel $end
$var wire 32 Y regf_data_to_rd [31:0] $end
$var wire 32 Z mem_data_to_rd [31:0] $end
$var wire 1 U final_result_data_to_read $end
$var wire 1 J display_data_to_read $end
$var wire 1 S alu_data_to_read $end
$var wire 10 [ addr [9:0] $end
$var reg 1 T alu_sel $end
$var reg 1 \ btn2_sel $end
$var reg 1 ] btn3_sel $end
$var reg 1 R complement2_sel $end
$var reg 1 Q cprt_sel $end
$var reg 32 ^ data_to_rd [31:0] $end
$var reg 1 K display_sel $end
$var reg 1 I final_result_convert_sel $end
$var reg 1 E led0_sel $end
$var reg 1 C mem_sel $end
$var reg 1 ? regf_sel $end
$var reg 1 _ sw2_sel $end
$var reg 1 ` sw_sel $end
$var reg 1 1 trap_sel $end
$upscope $end
$scope module complement1 $end
$var wire 1 a ci $end
$var wire 1 7 clk $end
$var wire 1 R complement1_sel $end
$var wire 1 b complement1_sel_aux $end
$var wire 4 c dumb_0 [3:0] $end
$var wire 12 d nr_coded [11:0] $end
$var wire 1 8 rst $end
$var wire 1 L wr_enable $end
$var wire 4 e second_nr_aux [3:0] $end
$var wire 4 f first_nr_aux [3:0] $end
$var wire 1 g complement1_finish_nr2 $end
$var wire 1 h complement1_finish_nr1 $end
$var reg 1 S complement1_finish $end
$var reg 4 i first_nr [3:0] $end
$var reg 4 j first_nr_reg [3:0] $end
$var reg 4 k oper_nr_reg [3:0] $end
$var reg 4 l operation [3:0] $end
$var reg 4 m second_nr [3:0] $end
$var reg 4 n second_nr_reg [3:0] $end
$scope module complement_first_nr $end
$var wire 4 o a [3:0] $end
$var wire 4 p a_xor [3:0] $end
$var wire 4 q aux_xor [3:0] $end
$var wire 4 r b [3:0] $end
$var wire 1 a ci $end
$var wire 1 7 clk $end
$var wire 1 R complement1_sel $end
$var wire 1 8 rst $end
$var wire 4 s sum_aux_v2 [3:0] $end
$var wire 4 t sum_aux [3:0] $end
$var wire 1 u done $end
$var wire 1 h complement1_finish $end
$var wire 1 v aux2 $end
$var wire 1 w aux1 $end
$var reg 4 x counter [3:0] $end
$var reg 4 y sum [3:0] $end
$scope module adder0 $end
$var wire 1 z a $end
$var wire 1 { b $end
$var wire 1 a ci $end
$var wire 1 w co $end
$var wire 1 | out_and1 $end
$var wire 1 } out_and2 $end
$var wire 1 ~ out_xor $end
$var wire 1 !" sum $end
$upscope $end
$scope module adder1 $end
$var wire 1 "" a $end
$var wire 1 #" b $end
$var wire 1 w ci $end
$var wire 1 v co $end
$var wire 1 $" out_and1 $end
$var wire 1 %" out_and2 $end
$var wire 1 &" out_xor $end
$var wire 1 '" sum $end
$upscope $end
$scope module adder2 $end
$var wire 1 (" a $end
$var wire 1 )" b $end
$var wire 1 v ci $end
$var wire 1 *" co $end
$var wire 1 +" out_and1 $end
$var wire 1 ," out_and2 $end
$var wire 1 -" out_xor $end
$var wire 1 ." sum $end
$upscope $end
$upscope $end
$scope module complement_second_nr $end
$var wire 4 /" a [3:0] $end
$var wire 4 0" a_xor [3:0] $end
$var wire 4 1" aux_xor [3:0] $end
$var wire 4 2" b [3:0] $end
$var wire 1 a ci $end
$var wire 1 7 clk $end
$var wire 1 R complement1_sel $end
$var wire 1 8 rst $end
$var wire 4 3" sum_aux_v2 [3:0] $end
$var wire 4 4" sum_aux [3:0] $end
$var wire 1 5" done $end
$var wire 1 g complement1_finish $end
$var wire 1 6" aux2 $end
$var wire 1 7" aux1 $end
$var reg 4 8" counter [3:0] $end
$var reg 4 9" sum [3:0] $end
$scope module adder0 $end
$var wire 1 :" a $end
$var wire 1 ;" b $end
$var wire 1 a ci $end
$var wire 1 7" co $end
$var wire 1 <" out_and1 $end
$var wire 1 =" out_and2 $end
$var wire 1 >" out_xor $end
$var wire 1 ?" sum $end
$upscope $end
$scope module adder1 $end
$var wire 1 @" a $end
$var wire 1 A" b $end
$var wire 1 7" ci $end
$var wire 1 6" co $end
$var wire 1 B" out_and1 $end
$var wire 1 C" out_and2 $end
$var wire 1 D" out_xor $end
$var wire 1 E" sum $end
$upscope $end
$scope module adder2 $end
$var wire 1 F" a $end
$var wire 1 G" b $end
$var wire 1 6" ci $end
$var wire 1 H" co $end
$var wire 1 I" out_and1 $end
$var wire 1 J" out_and2 $end
$var wire 1 K" out_xor $end
$var wire 1 L" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module controller $end
$var wire 1 M" alu_arith_ops $end
$var wire 1 N" alu_imm_ops $end
$var wire 1 O" alu_logic_ops $end
$var wire 1 P" alu_mem_ops $end
$var wire 1 Q" alu_ops $end
$var wire 32 R" and_res [31:0] $end
$var wire 1 S" branch_ops $end
$var wire 1 7 clk $end
$var wire 1 T" imm_ops $end
$var wire 1 U" load_imm_ops $end
$var wire 1 V" load_mem_ops $end
$var wire 1 W" load_ops $end
$var wire 32 X" mem_data_from [31:0] $end
$var wire 32 Y" mem_data_to [31:0] $end
$var wire 1 O mem_sel $end
$var wire 1 L mem_we $end
$var wire 1 8 rst $end
$var wire 1 Z" store_mem_ops $end
$var wire 32 [" xor_res [31:0] $end
$var wire 4 \" opcode [3:0] $end
$var wire 32 ]" instruction [31:0] $end
$var wire 32 ^" imm [31:0] $end
$var reg 32 _" adder_res [31:0] $end
$var reg 1 `" alu_carry $end
$var reg 1 a" alu_negative $end
$var reg 1 b" alu_overflow $end
$var reg 32 c" alu_result [31:0] $end
$var reg 1 d" carry_res_n $end
$var reg 32 e" carry_res_n_1 [31:0] $end
$var reg 10 f" mem_addr [9:0] $end
$var reg 32 g" operand [31:0] $end
$var reg 9 h" pc [8:0] $end
$var reg 32 i" regA [31:0] $end
$var reg 32 j" regB [31:0] $end
$var reg 3 k" regC [2:0] $end
$upscope $end
$scope module convert_final_result $end
$var wire 8 l" a_xor [7:0] $end
$var wire 8 m" aux_xor [7:0] $end
$var wire 8 n" b [7:0] $end
$var wire 1 o" ci $end
$var wire 1 7 clk $end
$var wire 1 p" complement1_sel $end
$var wire 1 8 rst $end
$var wire 8 q" sum_aux [7:0] $end
$var wire 1 r" complement1_finish_aux $end
$var wire 1 J complement1_finish $end
$var wire 1 s" aux7 $end
$var wire 1 t" aux6 $end
$var wire 1 u" aux5 $end
$var wire 1 v" aux4 $end
$var wire 1 w" aux3 $end
$var wire 1 x" aux2 $end
$var wire 1 y" aux1 $end
$var wire 8 z" a [7:0] $end
$var reg 3 {" counter [2:0] $end
$var reg 1 < sign $end
$var reg 8 |" sum [7:0] $end
$scope module adder0 $end
$var wire 1 }" a $end
$var wire 1 ~" b $end
$var wire 1 o" ci $end
$var wire 1 y" co $end
$var wire 1 !# out_and1 $end
$var wire 1 "# out_and2 $end
$var wire 1 ## out_xor $end
$var wire 1 $# sum $end
$upscope $end
$scope module adder1 $end
$var wire 1 %# a $end
$var wire 1 &# b $end
$var wire 1 y" ci $end
$var wire 1 x" co $end
$var wire 1 '# out_and1 $end
$var wire 1 (# out_and2 $end
$var wire 1 )# out_xor $end
$var wire 1 *# sum $end
$upscope $end
$scope module adder2 $end
$var wire 1 +# a $end
$var wire 1 ,# b $end
$var wire 1 x" ci $end
$var wire 1 w" co $end
$var wire 1 -# out_and1 $end
$var wire 1 .# out_and2 $end
$var wire 1 /# out_xor $end
$var wire 1 0# sum $end
$upscope $end
$scope module adder3 $end
$var wire 1 1# a $end
$var wire 1 2# b $end
$var wire 1 w" ci $end
$var wire 1 v" co $end
$var wire 1 3# out_and1 $end
$var wire 1 4# out_and2 $end
$var wire 1 5# out_xor $end
$var wire 1 6# sum $end
$upscope $end
$scope module adder4 $end
$var wire 1 7# a $end
$var wire 1 8# b $end
$var wire 1 v" ci $end
$var wire 1 u" co $end
$var wire 1 9# out_and1 $end
$var wire 1 :# out_and2 $end
$var wire 1 ;# out_xor $end
$var wire 1 <# sum $end
$upscope $end
$scope module adder5 $end
$var wire 1 =# a $end
$var wire 1 ># b $end
$var wire 1 u" ci $end
$var wire 1 t" co $end
$var wire 1 ?# out_and1 $end
$var wire 1 @# out_and2 $end
$var wire 1 A# out_xor $end
$var wire 1 B# sum $end
$upscope $end
$scope module adder6 $end
$var wire 1 C# a $end
$var wire 1 D# b $end
$var wire 1 t" ci $end
$var wire 1 s" co $end
$var wire 1 E# out_and1 $end
$var wire 1 F# out_and2 $end
$var wire 1 G# out_xor $end
$var wire 1 H# sum $end
$upscope $end
$scope module adder7 $end
$var wire 1 I# a $end
$var wire 1 J# b $end
$var wire 1 s" ci $end
$var wire 1 K# co $end
$var wire 1 L# out_and1 $end
$var wire 1 M# out_and2 $end
$var wire 1 N# out_xor $end
$var wire 1 O# sum $end
$upscope $end
$upscope $end
$scope module cprint $end
$var wire 1 7 clk $end
$var wire 8 P# data_in [7:0] $end
$var wire 1 Q# sel $end
$upscope $end
$scope module displayDecoder $end
$var wire 8 R# bin [7:0] $end
$var wire 1 7 clk $end
$var wire 1 K display_sel $end
$var wire 2 S# dot [1:0] $end
$var wire 2 T# msg [1:0] $end
$var wire 1 8 rst $end
$var wire 1 < sgn $end
$var wire 1 L wr_enable $end
$var wire 2 U# LED_activating_counter [1:0] $end
$var reg 5 V# aux [4:0] $end
$var reg 12 W# bcd [11:0] $end
$var reg 8 X# bin_reg [7:0] $end
$var reg 2 Y# disp_dot [1:0] $end
$var reg 4 Z# disp_select [3:0] $end
$var reg 8 [# disp_value [7:0] $end
$var reg 4 \# j [3:0] $end
$var reg 20 ]# refresh_counter [19:0] $end
$upscope $end
$scope module ram $end
$var wire 1 7 clk $end
$var wire 9 ^# data_addr [8:0] $end
$var wire 9 _# data_addr_int [8:0] $end
$var wire 1 `# data_en_int $end
$var wire 32 a# data_in [31:0] $end
$var wire 32 b# data_in_int [31:0] $end
$var wire 32 c# data_out [31:0] $end
$var wire 1 C data_sel $end
$var wire 1 L data_we $end
$var wire 1 d# data_we_int $end
$var wire 1 e# instr_en $end
$var wire 9 f# pc [8:0] $end
$var reg 32 g# data_out_int [31:0] $end
$var reg 32 h# instruction [31:0] $end
$upscope $end
$scope module real_alu $end
$var wire 1 i# alu_done_aux $end
$var wire 1 T alu_sel $end
$var wire 1 7 clk $end
$var wire 1 j# div_sel $end
$var wire 4 k# first_nr [3:0] $end
$var wire 1 l# mult_sel $end
$var wire 4 m# operation [3:0] $end
$var wire 1 8 rst $end
$var wire 4 n# second_nr [3:0] $end
$var wire 1 o# sum_sel $end
$var wire 1 L wr_enable $end
$var wire 8 p# result_finish_mult [7:0] $end
$var wire 8 q# result_finish_div [7:0] $end
$var wire 8 r# result_finish_adder [7:0] $end
$var wire 1 s# multiply_done $end
$var wire 1 t# done_sum $end
$var wire 1 u# division_done $end
$var reg 1 U alu_done $end
$var reg 4 v# first_nr_reg [3:0] $end
$var reg 4 w# operation_reg [3:0] $end
$var reg 8 x# result_uncoded [7:0] $end
$var reg 4 y# second_nr_reg [3:0] $end
$scope module adder4bits $end
$var wire 4 z# a [3:0] $end
$var wire 4 {# b [3:0] $end
$var wire 1 |# ci $end
$var wire 1 7 clk $end
$var wire 1 8 rst $end
$var wire 1 o# start $end
$var wire 1 t# done_sum $end
$var wire 1 }# done_aux $end
$var wire 8 ~# aux_sum_final [7:0] $end
$var wire 1 !$ aux7 $end
$var wire 1 "$ aux6 $end
$var wire 1 #$ aux5 $end
$var wire 1 $$ aux4 $end
$var wire 1 %$ aux3 $end
$var wire 1 &$ aux2 $end
$var wire 1 '$ aux1 $end
$var reg 8 ($ a_aux [7:0] $end
$var reg 8 )$ b_aux [7:0] $end
$var reg 4 *$ counter [3:0] $end
$var reg 8 +$ sum [7:0] $end
$scope module adder0 $end
$var wire 1 ,$ a $end
$var wire 1 -$ b $end
$var wire 1 |# ci $end
$var wire 1 '$ co $end
$var wire 1 .$ out_and1 $end
$var wire 1 /$ out_and2 $end
$var wire 1 0$ out_xor $end
$var wire 1 1$ sum $end
$upscope $end
$scope module adder1 $end
$var wire 1 2$ a $end
$var wire 1 3$ b $end
$var wire 1 '$ ci $end
$var wire 1 &$ co $end
$var wire 1 4$ out_and1 $end
$var wire 1 5$ out_and2 $end
$var wire 1 6$ out_xor $end
$var wire 1 7$ sum $end
$upscope $end
$scope module adder2 $end
$var wire 1 8$ a $end
$var wire 1 9$ b $end
$var wire 1 &$ ci $end
$var wire 1 %$ co $end
$var wire 1 :$ out_and1 $end
$var wire 1 ;$ out_and2 $end
$var wire 1 <$ out_xor $end
$var wire 1 =$ sum $end
$upscope $end
$scope module adder3 $end
$var wire 1 >$ a $end
$var wire 1 ?$ b $end
$var wire 1 %$ ci $end
$var wire 1 $$ co $end
$var wire 1 @$ out_and1 $end
$var wire 1 A$ out_and2 $end
$var wire 1 B$ out_xor $end
$var wire 1 C$ sum $end
$upscope $end
$scope module adder4 $end
$var wire 1 D$ a $end
$var wire 1 E$ b $end
$var wire 1 $$ ci $end
$var wire 1 #$ co $end
$var wire 1 F$ out_and1 $end
$var wire 1 G$ out_and2 $end
$var wire 1 H$ out_xor $end
$var wire 1 I$ sum $end
$upscope $end
$scope module adder5 $end
$var wire 1 J$ a $end
$var wire 1 K$ b $end
$var wire 1 #$ ci $end
$var wire 1 "$ co $end
$var wire 1 L$ out_and1 $end
$var wire 1 M$ out_and2 $end
$var wire 1 N$ out_xor $end
$var wire 1 O$ sum $end
$upscope $end
$scope module adder6 $end
$var wire 1 P$ a $end
$var wire 1 Q$ b $end
$var wire 1 "$ ci $end
$var wire 1 !$ co $end
$var wire 1 R$ out_and1 $end
$var wire 1 S$ out_and2 $end
$var wire 1 T$ out_xor $end
$var wire 1 U$ sum $end
$upscope $end
$scope module adder7 $end
$var wire 1 V$ a $end
$var wire 1 W$ b $end
$var wire 1 !$ ci $end
$var wire 1 X$ co $end
$var wire 1 Y$ out_and1 $end
$var wire 1 Z$ out_and2 $end
$var wire 1 [$ out_xor $end
$var wire 1 \$ sum $end
$upscope $end
$upscope $end
$scope module divide $end
$var wire 4 ]$ a [3:0] $end
$var wire 4 ^$ b [3:0] $end
$var wire 1 7 clk $end
$var wire 1 8 rst $end
$var wire 1 j# start $end
$var wire 4 _$ second_nr_aux [3:0] $end
$var wire 4 `$ quociente_XOR [3:0] $end
$var wire 4 a$ quociente [3:0] $end
$var wire 4 b$ first_nr_aux [3:0] $end
$var wire 1 c$ done_valid_xor $end
$var wire 1 d$ done_valid $end
$var wire 1 u# done_division $end
$var reg 4 e$ D_aux [3:0] $end
$var reg 4 f$ counter [3:0] $end
$var reg 4 g$ divider_aux [3:0] $end
$var reg 8 h$ q [7:0] $end
$var reg 1 i$ start_aux $end
$scope module div1 $end
$var wire 4 j$ D [3:0] $end
$var wire 1 7 clk $end
$var wire 4 k$ divider [3:0] $end
$var wire 1 i$ start $end
$var wire 1 d$ valid $end
$var wire 4 l$ r [3:0] $end
$var reg 8 m$ Dext [7:0] $end
$var reg 3 n$ cnt [2:0] $end
$var reg 4 o$ q [3:0] $end
$upscope $end
$scope module multiply_comple2 $end
$var wire 1 p$ ci $end
$var wire 1 7 clk $end
$var wire 1 q$ complement1_sel $end
$var wire 4 r$ dumb_0 [3:0] $end
$var wire 4 s$ first_nr_reg [3:0] $end
$var wire 1 8 rst $end
$var wire 4 t$ second_nr_reg [3:0] $end
$var wire 4 u$ second_nr_aux [3:0] $end
$var wire 4 v$ first_nr_aux [3:0] $end
$var wire 1 w$ complement1_finish_nr2 $end
$var wire 1 x$ complement1_finish_nr1 $end
$var reg 4 y$ first_nr [3:0] $end
$var reg 4 z$ second_nr [3:0] $end
$scope module division_complement_first_nr $end
$var wire 4 {$ a [3:0] $end
$var wire 4 |$ a_xor [3:0] $end
$var wire 4 }$ aux_xor [3:0] $end
$var wire 4 ~$ b [3:0] $end
$var wire 1 p$ ci $end
$var wire 1 7 clk $end
$var wire 1 q$ complement1_sel $end
$var wire 1 8 rst $end
$var wire 3 !% sum_aux [2:0] $end
$var wire 1 "% aux2 $end
$var wire 1 #% aux1 $end
$var reg 1 x$ complement1_finish $end
$var reg 4 $% sum [3:0] $end
$scope module adder0 $end
$var wire 1 %% a $end
$var wire 1 &% b $end
$var wire 1 p$ ci $end
$var wire 1 #% co $end
$var wire 1 '% out_and1 $end
$var wire 1 (% out_and2 $end
$var wire 1 )% out_xor $end
$var wire 1 *% sum $end
$upscope $end
$scope module adder1 $end
$var wire 1 +% a $end
$var wire 1 ,% b $end
$var wire 1 #% ci $end
$var wire 1 "% co $end
$var wire 1 -% out_and1 $end
$var wire 1 .% out_and2 $end
$var wire 1 /% out_xor $end
$var wire 1 0% sum $end
$upscope $end
$scope module adder2 $end
$var wire 1 1% a $end
$var wire 1 2% b $end
$var wire 1 "% ci $end
$var wire 1 3% co $end
$var wire 1 4% out_and1 $end
$var wire 1 5% out_and2 $end
$var wire 1 6% out_xor $end
$var wire 1 7% sum $end
$upscope $end
$upscope $end
$scope module division_complement_second_nr $end
$var wire 4 8% a [3:0] $end
$var wire 4 9% a_xor [3:0] $end
$var wire 4 :% aux_xor [3:0] $end
$var wire 4 ;% b [3:0] $end
$var wire 1 p$ ci $end
$var wire 1 7 clk $end
$var wire 1 q$ complement1_sel $end
$var wire 1 8 rst $end
$var wire 3 <% sum_aux [2:0] $end
$var wire 1 =% aux2 $end
$var wire 1 >% aux1 $end
$var reg 1 w$ complement1_finish $end
$var reg 4 ?% sum [3:0] $end
$scope module adder0 $end
$var wire 1 @% a $end
$var wire 1 A% b $end
$var wire 1 p$ ci $end
$var wire 1 >% co $end
$var wire 1 B% out_and1 $end
$var wire 1 C% out_and2 $end
$var wire 1 D% out_xor $end
$var wire 1 E% sum $end
$upscope $end
$scope module adder1 $end
$var wire 1 F% a $end
$var wire 1 G% b $end
$var wire 1 >% ci $end
$var wire 1 =% co $end
$var wire 1 H% out_and1 $end
$var wire 1 I% out_and2 $end
$var wire 1 J% out_xor $end
$var wire 1 K% sum $end
$upscope $end
$scope module adder2 $end
$var wire 1 L% a $end
$var wire 1 M% b $end
$var wire 1 =% ci $end
$var wire 1 N% co $end
$var wire 1 O% out_and1 $end
$var wire 1 P% out_and2 $end
$var wire 1 Q% out_xor $end
$var wire 1 R% sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module result_div $end
$var wire 4 S% a [3:0] $end
$var wire 4 T% a_xor [3:0] $end
$var wire 4 U% aux_xor [3:0] $end
$var wire 4 V% b [3:0] $end
$var wire 1 W% ci $end
$var wire 1 7 clk $end
$var wire 1 d$ complement1_sel $end
$var wire 1 8 rst $end
$var wire 3 X% sum_aux [2:0] $end
$var wire 1 Y% aux2 $end
$var wire 1 Z% aux1 $end
$var reg 1 [% complement1_finish $end
$var reg 4 \% sum [3:0] $end
$scope module adder0 $end
$var wire 1 ]% a $end
$var wire 1 ^% b $end
$var wire 1 W% ci $end
$var wire 1 Z% co $end
$var wire 1 _% out_and1 $end
$var wire 1 `% out_and2 $end
$var wire 1 a% out_xor $end
$var wire 1 b% sum $end
$upscope $end
$scope module adder1 $end
$var wire 1 c% a $end
$var wire 1 d% b $end
$var wire 1 Z% ci $end
$var wire 1 Y% co $end
$var wire 1 e% out_and1 $end
$var wire 1 f% out_and2 $end
$var wire 1 g% out_xor $end
$var wire 1 h% sum $end
$upscope $end
$scope module adder2 $end
$var wire 1 i% a $end
$var wire 1 j% b $end
$var wire 1 Y% ci $end
$var wire 1 k% co $end
$var wire 1 l% out_and1 $end
$var wire 1 m% out_and2 $end
$var wire 1 n% out_xor $end
$var wire 1 o% sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module mult $end
$var wire 4 p% a [3:0] $end
$var wire 4 q% b [3:0] $end
$var wire 1 7 clk $end
$var wire 1 8 rst $end
$var wire 1 l# start $end
$var wire 4 r% second_nr_aux [3:0] $end
$var wire 8 s% resulty [7:0] $end
$var wire 1 s# multiply_done $end
$var wire 4 t% first_nr_aux [3:0] $end
$var wire 1 u% done $end
$var reg 8 v% aux_sumy_v2 [7:0] $end
$var reg 8 w% c [7:0] $end
$var reg 1 x% complement_result_sel $end
$var reg 4 y% counter [3:0] $end
$scope module multiply_comple2 $end
$var wire 1 z% ci $end
$var wire 1 7 clk $end
$var wire 1 {% complement1_sel $end
$var wire 4 |% dumb_0 [3:0] $end
$var wire 4 }% first_nr_reg [3:0] $end
$var wire 1 8 rst $end
$var wire 4 ~% second_nr_reg [3:0] $end
$var wire 4 !& second_nr_aux [3:0] $end
$var wire 4 "& first_nr_aux [3:0] $end
$var wire 1 #& complement1_finish_nr2 $end
$var wire 1 $& complement1_finish_nr1 $end
$var reg 4 %& first_nr [3:0] $end
$var reg 4 && second_nr [3:0] $end
$scope module multiply_complement_first_nr $end
$var wire 4 '& a [3:0] $end
$var wire 4 (& a_xor [3:0] $end
$var wire 4 )& aux_xor [3:0] $end
$var wire 4 *& b [3:0] $end
$var wire 1 z% ci $end
$var wire 1 7 clk $end
$var wire 1 {% complement1_sel $end
$var wire 4 +& dumby [3:0] $end
$var wire 1 8 rst $end
$var wire 4 ,& sum_aux_v2 [3:0] $end
$var wire 4 -& sum_aux [3:0] $end
$var wire 1 .& aux2 $end
$var wire 1 /& aux1 $end
$var reg 1 $& complement1_finish $end
$var reg 4 0& sum [3:0] $end
$scope module adder0 $end
$var wire 1 1& a $end
$var wire 1 2& b $end
$var wire 1 z% ci $end
$var wire 1 /& co $end
$var wire 1 3& out_and1 $end
$var wire 1 4& out_and2 $end
$var wire 1 5& out_xor $end
$var wire 1 6& sum $end
$upscope $end
$scope module adder1 $end
$var wire 1 7& a $end
$var wire 1 8& b $end
$var wire 1 /& ci $end
$var wire 1 .& co $end
$var wire 1 9& out_and1 $end
$var wire 1 :& out_and2 $end
$var wire 1 ;& out_xor $end
$var wire 1 <& sum $end
$upscope $end
$scope module adder2 $end
$var wire 1 =& a $end
$var wire 1 >& b $end
$var wire 1 .& ci $end
$var wire 1 ?& co $end
$var wire 1 @& out_and1 $end
$var wire 1 A& out_and2 $end
$var wire 1 B& out_xor $end
$var wire 1 C& sum $end
$upscope $end
$upscope $end
$scope module multiply_complement_second_nr $end
$var wire 4 D& a [3:0] $end
$var wire 4 E& a_xor [3:0] $end
$var wire 4 F& aux_xor [3:0] $end
$var wire 4 G& b [3:0] $end
$var wire 1 z% ci $end
$var wire 1 7 clk $end
$var wire 1 {% complement1_sel $end
$var wire 4 H& dumby [3:0] $end
$var wire 1 8 rst $end
$var wire 4 I& sum_aux_v2 [3:0] $end
$var wire 4 J& sum_aux [3:0] $end
$var wire 1 K& aux2 $end
$var wire 1 L& aux1 $end
$var reg 1 #& complement1_finish $end
$var reg 4 M& sum [3:0] $end
$scope module adder0 $end
$var wire 1 N& a $end
$var wire 1 O& b $end
$var wire 1 z% ci $end
$var wire 1 L& co $end
$var wire 1 P& out_and1 $end
$var wire 1 Q& out_and2 $end
$var wire 1 R& out_xor $end
$var wire 1 S& sum $end
$upscope $end
$scope module adder1 $end
$var wire 1 T& a $end
$var wire 1 U& b $end
$var wire 1 L& ci $end
$var wire 1 K& co $end
$var wire 1 V& out_and1 $end
$var wire 1 W& out_and2 $end
$var wire 1 X& out_xor $end
$var wire 1 Y& sum $end
$upscope $end
$scope module adder2 $end
$var wire 1 Z& a $end
$var wire 1 [& b $end
$var wire 1 K& ci $end
$var wire 1 \& co $end
$var wire 1 ]& out_and1 $end
$var wire 1 ^& out_and2 $end
$var wire 1 _& out_xor $end
$var wire 1 `& sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module multiply_complement_result $end
$var wire 8 a& a [7:0] $end
$var wire 8 b& a_xor [7:0] $end
$var wire 8 c& aux_xor [7:0] $end
$var wire 8 d& b [7:0] $end
$var wire 1 e& ci $end
$var wire 1 7 clk $end
$var wire 1 x% complement1_sel $end
$var wire 1 8 rst $end
$var wire 8 f& sum_aux [7:0] $end
$var wire 1 g& aux7 $end
$var wire 1 h& aux6 $end
$var wire 1 i& aux5 $end
$var wire 1 j& aux4 $end
$var wire 1 k& aux3 $end
$var wire 1 l& aux2 $end
$var wire 1 m& aux1 $end
$var reg 8 n& sum [7:0] $end
$scope module adder0 $end
$var wire 1 o& a $end
$var wire 1 p& b $end
$var wire 1 e& ci $end
$var wire 1 m& co $end
$var wire 1 q& out_and1 $end
$var wire 1 r& out_and2 $end
$var wire 1 s& out_xor $end
$var wire 1 t& sum $end
$upscope $end
$scope module adder1 $end
$var wire 1 u& a $end
$var wire 1 v& b $end
$var wire 1 m& ci $end
$var wire 1 l& co $end
$var wire 1 w& out_and1 $end
$var wire 1 x& out_and2 $end
$var wire 1 y& out_xor $end
$var wire 1 z& sum $end
$upscope $end
$scope module adder2 $end
$var wire 1 {& a $end
$var wire 1 |& b $end
$var wire 1 l& ci $end
$var wire 1 k& co $end
$var wire 1 }& out_and1 $end
$var wire 1 ~& out_and2 $end
$var wire 1 !' out_xor $end
$var wire 1 "' sum $end
$upscope $end
$scope module adder3 $end
$var wire 1 #' a $end
$var wire 1 $' b $end
$var wire 1 k& ci $end
$var wire 1 j& co $end
$var wire 1 %' out_and1 $end
$var wire 1 &' out_and2 $end
$var wire 1 '' out_xor $end
$var wire 1 (' sum $end
$upscope $end
$scope module adder4 $end
$var wire 1 )' a $end
$var wire 1 *' b $end
$var wire 1 j& ci $end
$var wire 1 i& co $end
$var wire 1 +' out_and1 $end
$var wire 1 ,' out_and2 $end
$var wire 1 -' out_xor $end
$var wire 1 .' sum $end
$upscope $end
$scope module adder5 $end
$var wire 1 /' a $end
$var wire 1 0' b $end
$var wire 1 i& ci $end
$var wire 1 h& co $end
$var wire 1 1' out_and1 $end
$var wire 1 2' out_and2 $end
$var wire 1 3' out_xor $end
$var wire 1 4' sum $end
$upscope $end
$scope module adder6 $end
$var wire 1 5' a $end
$var wire 1 6' b $end
$var wire 1 h& ci $end
$var wire 1 g& co $end
$var wire 1 7' out_and1 $end
$var wire 1 8' out_and2 $end
$var wire 1 9' out_xor $end
$var wire 1 :' sum $end
$upscope $end
$scope module adder7 $end
$var wire 1 ;' a $end
$var wire 1 <' b $end
$var wire 1 g& ci $end
$var wire 1 =' co $end
$var wire 1 >' out_and1 $end
$var wire 1 ?' out_and2 $end
$var wire 1 @' out_xor $end
$var wire 1 A' sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module regf $end
$var wire 4 B' addr [3:0] $end
$var wire 1 7 clk $end
$var wire 32 C' data_in [31:0] $end
$var wire 1 ? sel $end
$var wire 1 L we $end
$var wire 32 D' data_out [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx D'
bx C'
bx B'
xA'
x@'
0?'
x>'
x='
0<'
x;'
x:'
x9'
08'
x7'
06'
x5'
x4'
x3'
02'
x1'
00'
x/'
x.'
x-'
0,'
x+'
0*'
x)'
x('
x''
0&'
x%'
0$'
x#'
x"'
x!'
0~&
x}&
0|&
x{&
xz&
xy&
0x&
xw&
0v&
xu&
xt&
xs&
0r&
xq&
0p&
xo&
bx n&
xm&
xl&
xk&
xj&
xi&
xh&
xg&
bx f&
1e&
b0 d&
b11111111 c&
bx b&
bx a&
x`&
x_&
0^&
x]&
x\&
0[&
xZ&
xY&
xX&
0W&
xV&
0U&
xT&
xS&
xR&
0Q&
xP&
0O&
xN&
bx M&
xL&
xK&
bzxxx J&
b0xxx I&
b0 H&
b0 G&
b1111 F&
bx E&
bx D&
xC&
xB&
0A&
x@&
x?&
0>&
x=&
x<&
x;&
0:&
x9&
08&
x7&
x6&
x5&
04&
x3&
02&
x1&
bx 0&
x/&
x.&
bzxxx -&
b0xxx ,&
b0 +&
b0 *&
b1111 )&
bx (&
bx '&
bx &&
bx %&
x$&
x#&
bx "&
bx !&
bx ~%
bx }%
b0 |%
1{%
1z%
bx y%
1x%
bx w%
bx v%
xu%
bx t%
bx s%
bx r%
bx q%
bx p%
xo%
xn%
0m%
xl%
xk%
0j%
xi%
xh%
xg%
0f%
xe%
0d%
xc%
xb%
xa%
0`%
x_%
0^%
x]%
bx \%
x[%
xZ%
xY%
bx X%
1W%
b0 V%
b1111 U%
b0xxx T%
b1xxx S%
xR%
xQ%
0P%
xO%
xN%
0M%
xL%
xK%
xJ%
0I%
xH%
0G%
xF%
xE%
xD%
0C%
xB%
0A%
x@%
bx ?%
x>%
x=%
bx <%
b0 ;%
b1111 :%
bx 9%
bx 8%
x7%
x6%
05%
x4%
x3%
02%
x1%
x0%
x/%
0.%
x-%
0,%
x+%
x*%
x)%
0(%
x'%
0&%
x%%
bx $%
x#%
x"%
bx !%
b0 ~$
b1111 }$
bx |$
bx {$
bx z$
bx y$
xx$
xw$
bx v$
bx u$
bx t$
bx s$
b0 r$
1q$
1p$
bx o$
bx n$
bx m$
bx l$
bx k$
bx j$
0i$
bx h$
bx g$
bx f$
bx e$
xd$
xc$
bx b$
bx a$
bx `$
bx _$
bx ^$
bx ]$
x\$
x[$
xZ$
xY$
xX$
xW$
xV$
xU$
xT$
xS$
xR$
xQ$
xP$
xO$
xN$
xM$
xL$
xK$
xJ$
xI$
xH$
xG$
xF$
xE$
xD$
xC$
xB$
xA$
x@$
x?$
x>$
x=$
x<$
x;$
x:$
x9$
x8$
x7$
x6$
x5$
x4$
x3$
x2$
x1$
x0$
x/$
0.$
x-$
x,$
bx +$
bx *$
bx )$
bx ($
x'$
x&$
x%$
x$$
x#$
x"$
x!$
bx ~#
x}#
0|#
bx {#
bx z#
bx y#
bx x#
bx w#
bx v#
xu#
xt#
xs#
bx r#
bx q#
bx p#
xo#
bx n#
bx m#
xl#
bx k#
xj#
xi#
bx h#
bx g#
bx f#
1e#
xd#
bx c#
bx b#
bx a#
x`#
bx _#
bx ^#
bx ]#
bx \#
bx [#
bx Z#
b0 Y#
bx X#
bx W#
bx V#
bx U#
b0 T#
b0 S#
bx R#
xQ#
bx P#
xO#
xN#
0M#
xL#
xK#
0J#
xI#
xH#
xG#
0F#
xE#
0D#
xC#
xB#
xA#
0@#
x?#
0>#
x=#
x<#
x;#
0:#
x9#
08#
x7#
x6#
x5#
04#
x3#
02#
x1#
x0#
x/#
0.#
x-#
0,#
x+#
x*#
x)#
0(#
x'#
0&#
x%#
x$#
x##
0"#
x!#
0~"
x}"
bx |"
bx {"
bx z"
xy"
xx"
xw"
xv"
xu"
xt"
xs"
xr"
bx q"
xp"
1o"
b0 n"
b11111111 m"
bx l"
bx k"
bx j"
bx i"
bx h"
b0 g"
bx f"
bx e"
xd"
b0 c"
0b"
0a"
0`"
bx _"
bx ^"
bx ]"
bx \"
bx ["
xZ"
bx Y"
b0 X"
xW"
xV"
xU"
xT"
xS"
b0 R"
xQ"
xP"
xO"
xN"
xM"
xL"
xK"
0J"
xI"
xH"
0G"
xF"
xE"
xD"
0C"
xB"
0A"
x@"
x?"
x>"
0="
x<"
0;"
x:"
bx 9"
bx 8"
x7"
x6"
x5"
bzxxx 4"
bx 3"
b0 2"
b1111 1"
bx 0"
bx /"
x."
x-"
0,"
x+"
x*"
0)"
x("
x'"
x&"
0%"
x$"
0#"
x""
x!"
x~
0}
x|
0{
xz
bx y
bx x
xw
xv
xu
bzxxx t
bx s
b0 r
b1111 q
bx p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
xh
xg
bx f
bx e
bx d
b0 c
xb
1a
x`
x_
b0 ^
x]
x\
bx [
bx Z
bx Y
b10010100 X
bx W
bx V
xU
xT
xS
xR
xQ
bx P
xO
b0 N
bx M
xL
xK
xJ
xI
bx H
bx G
bx F
xE
bx D
xC
bx B
bx A
bx @
x?
bx >
bx =
x<
b10010100 ;
bx :
bx 9
08
17
b10010100 6
15
04
bx 3
bx 2
x1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
bx '
bx &
bx %
bx $
bx #
bx "
bx !
$end
#5000
07
#10000
17
#11000
1N%
1\&
13%
1?&
1H"
1*"
1O%
0R%
1]&
0`&
14%
07%
1@&
0C&
1I"
0L"
1+"
0."
1=%
1K&
1"%
1.&
16"
1v
1H%
0K%
1V&
0Y&
1-%
00%
19&
0<&
1B"
0E"
1$"
0'"
1>%
1L&
b0 I&
1#%
1/&
b0 ,&
17"
1w
1B%
b0 <%
0E%
1P&
bz000 J&
0S&
1'%
b0 !%
0*%
13&
bz000 -&
06&
1<"
bz000 4"
0?"
1|
bz000 t
0!"
1D%
1J%
1Q%
1R&
1X&
1_&
1)%
1/%
16%
15&
1;&
1B&
1>"
1D"
1K"
1~
1&"
1-"
b11000000 3
b11000000 W
b11000000 [#
1@%
1F%
1L%
1N&
1T&
1Z&
1%%
1+%
11%
11&
17&
1=&
1:"
1@"
1F"
1z
1""
1("
b0 _"
0d"
b0 e"
b0 ["
b0 P#
b0 d
b0 V#
b1110 2
b1110 V
b1110 Z#
b0 U#
b1000 \#
b0 W#
b1111 9%
b1111 E&
b1111 |$
b1111 (&
b1111 0"
b0 3"
b1111 p
b0 s
b0 A
b0 h"
b0 f#
b0 b#
b0 M
b0 Y"
b0 a#
b0 C'
b0 i"
b0 j"
b0 k"
0<
b0 H
b0 |"
b0 R#
0r"
0J
b100 {"
b0 ]#
b0 X#
0$&
b0 "&
b0 0&
0#&
b0 !&
b0 M&
b0 r%
b0 &&
b0 t%
b0 %&
b0 s%
b0 n&
0x$
b0 v$
b0 $%
0w$
b0 u$
b0 ?%
b0 _$
b0 z$
b0 b$
b0 y$
0[%
b0 `$
b0 \%
b0 w#
b0 y#
b0 {#
b0 ^$
b0 t$
b0 8%
b0 q%
b0 ~%
b0 D&
b0 v#
b0 z#
b0 ]$
b0 s$
b0 {$
b0 p%
b0 }%
b0 '&
0U
0S
b0 k
b0 n
b0 /"
b0 j
b0 o
18
#15000
07
#20000
1='
1>'
0A'
1g&
17'
0:'
1h&
11'
04'
1i&
1+'
0.'
1j&
1%'
0('
b1 _"
b1 e"
b1 ["
1k&
b1 g"
1}&
0"'
b1 N
b1 ^
b1 X"
1l&
1w&
0z&
1O
b0 @
b0 Y
b0 D'
1m&
b110 B'
b11000110 _#
b11000110 ^#
01
0Q
0?
0`#
0C
0K
0T
0R
0E
0_
0`
0\
1]
0I
1q&
b0 f&
0t&
b1011000110 P
b1011000110 [
b1011000110 f"
0P"
0Q"
0o#
0l#
0j#
0Q#
0p"
1W"
0T"
1s&
1y&
1!'
1''
1-'
13'
19'
1@'
0i#
b1011000110 ^"
0S"
0O"
0M"
0N"
0d#
0L
0Z"
1V"
0U"
1o&
1u&
1{&
1#'
1)'
1/'
15'
1;'
0b
b1000 \"
b11111111 b&
b10000000000000000000001011000110 F
b10000000000000000000001011000110 ]"
b10000000000000000000001011000110 h#
b0 r#
b0 +$
0}#
0t#
b110 *$
b0 v%
b0 a&
0s#
0u%
b100 y%
0u#
0c$
b100 f$
b0 f
b0 y
0h
0u
b100 x
b0 e
b0 9"
0g
05"
b100 8"
17
#21000
b10101 :
08
#25000
07
#30000
1K#
1L#
0O#
1s"
1E#
0H#
1t"
1?#
0B#
1u"
19#
0<#
1v"
13#
06#
1w"
1-#
00#
1x"
1'#
0*#
1y"
1!#
b0 q"
0$#
1##
1)#
1/#
15#
1;#
1A#
1G#
1N#
1}"
1%#
1+#
11#
17#
1=#
1C#
1I#
b10 _"
b10 e"
b0 ["
b1 R"
b1 P#
b1 d
b11111111 l"
b101 8"
b101 x
b101 f$
b101 y%
b1 A
b1 h"
b1 f#
b1 b#
b1 M
b1 Y"
b1 a#
b1 C'
b1 i"
b101 {"
b1 ]#
1$&
1#&
1x$
1w$
b0 >
b0 z"
b0 x#
17
#35000
07
#40000
0O
b0 N
b0 ^
b0 X"
b1 _"
b1 e"
b1 ["
b0 R"
b0 B'
b0 _#
b0 ^#
0`#
0C
0]
1S"
b0 g"
b0 P
b0 [
b0 f"
0W"
b0 ^"
0V"
b1100 \"
b11000000000000000000000000000000 F
b11000000000000000000000000000000 ]"
b11000000000000000000000000000000 h#
b110 y%
b110 f$
b110 x
b110 8"
b10 ]#
b110 {"
b10 A
b10 h"
b10 f#
17
#45000
07
#50000
0S"
1Q"
1M"
1T"
1N"
b0 \"
b0 _"
b0 e"
b0 ["
b0 P#
b0 d
b111 8"
b111 x
b111 f$
1u%
b111 y%
b0 F
b0 ]"
b0 h#
b11 A
b11 h"
b11 f#
b0 b#
b0 M
b0 Y"
b0 a#
b0 C'
b0 i"
b111 {"
b11 ]#
17
#55000
07
#60000
b10010100 _"
b10010100 e"
b10010100 ["
b10010100 g"
b10010100 N
b10010100 ^
b10010100 X"
1`
1O
b11000000 _#
b11000000 ^#
0Q"
b1011000000 P
b1011000000 [
b1011000000 f"
0P"
0M"
0T"
1W"
1i#
b1011000000 ^"
0N"
1V"
b1000 \"
b10000000000000000000001011000000 F
b10000000000000000000001011000000 ]"
b10000000000000000000001011000000 h#
1s#
0u%
b1000 y%
b0 p#
b0 w%
b1000 f$
b1000 x
b1000 8"
b100 ]#
b0 {"
b100 A
b100 h"
b100 f#
17
#65000
07
#70000
bx @
bx Y
bx D'
b0 _#
b0 ^#
1?
0`
0i#
b1000000000 P
b1000000000 [
b1000000000 f"
0W"
b1000000000 ^"
1d#
1L
1Z"
0V"
b0 g"
b1001 \"
b10010100 _"
b10010100 e"
b10010100 ["
b0 R"
b10010100 P#
b10010100 d
bx N
bx ^
bx X"
b1001 8"
b1001 x
b1001 f$
0s#
b1001 y%
b10010000000000000000001000000000 F
b10010000000000000000001000000000 ]"
b10010000000000000000001000000000 h#
b101 A
b101 h"
b101 f#
b10010100 b#
b10010100 M
b10010100 Y"
b10010100 a#
b10010100 C'
b10010100 i"
b1 {"
b101 ]#
1U
17
#71000
bx N
bx ^
bx X"
14
05
b1 6
b1 ;
b1 X
#75000
07
#80000
b10010101 _"
b10010101 e"
b10010101 ["
b0 R"
b1010 B'
b11001010 _#
b11001010 ^#
1\
0?
b1 g"
b1011001010 P
b1011001010 [
b1011001010 f"
1W"
b1011001010 ^"
0d#
0L
0Z"
1V"
b1000 \"
b0 @
b0 Y
b0 D'
b1 N
b1 ^
b1 X"
b10000000000000000000001011001010 F
b10000000000000000000001011001010 ]"
b10000000000000000000001011001010 h#
b10010100 !
b1010 y%
1c$
b1010 f$
b1010 x
b1010 8"
0U
b110 ]#
1r"
b10 {"
b110 A
b110 h"
b110 f#
17
#85000
07
#90000
0O
b101 B'
b101 _#
b101 ^#
0`#
0C
0\
1S"
b101 P
b101 [
b101 f"
0W"
1i#
b101 ^"
0V"
b0 g"
b1100 \"
b1 _"
b1 e"
b1 ["
b0 R"
b1 P#
b1 d
b0 N
b0 ^
b0 X"
b1011 8"
b1011 x
b0 q#
b0 h$
1u#
0c$
b1011 f$
b11000000000000000000000000000101 F
b11000000000000000000000000000101 ]"
b11000000000000000000000000000101 h#
b111 A
b111 h"
b111 f#
b1 b#
b1 M
b1 Y"
b1 a#
b1 C'
b1 i"
0r"
1J
b11 {"
b111 ]#
17
#95000
07
#100000
b0 B'
b0 _#
b0 ^#
0S"
1Q"
b0 P
b0 [
b0 f"
1M"
1T"
b0 ^"
1N"
0i#
b0 \"
b0 _"
b0 e"
b0 ["
b0 P#
b0 d
b0 F
b0 ]"
b0 h#
0u#
b1100 f$
b1100 x
b1100 8"
1U
b1000 ]#
b0 b#
b0 M
b0 Y"
b0 a#
b0 C'
b0 i"
b1000 A
b1000 h"
b1000 f#
17
#105000
07
#110000
b1 _"
b1 e"
b1 ["
b1 g"
b1 N
b1 ^
b1 X"
1_
1O
b1110 B'
b11001110 _#
b11001110 ^#
0Q"
b1011001110 P
b1011001110 [
b1011001110 f"
0P"
0M"
0T"
1W"
b1011001110 ^"
0N"
1V"
b1000 \"
b1101 8"
b1101 x
b10000000000000000000001011001110 F
b10000000000000000000001011001110 ]"
b10000000000000000000001011001110 h#
b1001 A
b1001 h"
b1001 f#
b1001 ]#
0U
17
#115000
07
#120000
bx @
bx Y
bx D'
bx N
bx ^
bx X"
b1 B'
b1 _#
b1 ^#
1?
0_
b0 g"
b1000000001 P
b1000000001 [
b1000000001 f"
0W"
b1000000001 ^"
1d#
1L
1Z"
0V"
b1001 \"
b1 _"
b1 e"
b1 ["
b0 R"
b1 P#
b1 d
b10010000000000000000001000000001 F
b10010000000000000000001000000001 ]"
b10010000000000000000001000000001 h#
b1110 x
b1110 8"
b1010 ]#
b1 b#
b1 M
b1 Y"
b1 a#
b1 C'
b1 i"
b1010 A
b1010 h"
b1010 f#
17
#125000
07
#130000
b10010101 _"
b10010101 e"
b10010101 ["
b0 R"
b0 B'
b0 _#
b0 ^#
1?
b10010100 g"
b1000000000 P
b1000000000 [
b1000000000 f"
1W"
b10010100 N
b10010100 ^
b10010100 X"
b1000000000 ^"
0d#
0L
0Z"
1V"
b10010100 @
b10010100 Y
b10010100 D'
b1000 \"
b1111 8"
b1111 x
b1 "
b10000000000000000000001000000000 F
b10000000000000000000001000000000 ]"
b10000000000000000000001000000000 h#
b1011 A
b1011 h"
b1011 f#
b1011 ]#
17
#135000
07
#140000
1d"
0O
b0 N
b0 ^
b0 X"
b0 @
b0 Y
b0 D'
b1111 B'
b111111111 _#
b111111111 ^#
01
0?
1Q"
b11111111111111111111111111111111 g"
b1111111111 P
b1111111111 [
b1111111111 f"
1T"
0W"
b11111111111111111111111111111111 ^"
1N"
0V"
b100101000 c"
b11 \"
b10010011 _"
b10000000000000000000000010010011 e"
b11111111111111111111111101101011 ["
b10010100 R"
b10010100 P#
b10010100 d
b111111111111111111111111111111 F
b111111111111111111111111111111 ]"
b111111111111111111111111111111 h#
b0 x
b0 8"
b1100 ]#
b10010100 b#
b10010100 M
b10010100 Y"
b10010100 a#
b10010100 C'
b10010100 i"
b1100 A
b1100 h"
b1100 f#
17
#145000
07
#150000
b1001010000 c"
b100100111 _"
b10000000000000000000000100100111 e"
b11111111111111111111111011010111 ["
b100101000 R"
b101000 P#
b100101000 d
15"
b1 8"
1u
b1 x
b1101 A
b1101 h"
b1101 f#
b100101000 b#
b100101000 M
b100101000 Y"
b100101000 a#
b100101000 C'
b100101000 i"
b1101 ]#
17
#155000
07
#160000
1b
b10010100000 c"
b1001001111 _"
b10000000000000000000001001001111 e"
b11111111111111111111110110101111 ["
b1001010000 R"
b1010000 P#
b1001010000 d
1h
0u
b10 x
1g
05"
b10 8"
b1110 ]#
b1001010000 b#
b1001010000 M
b1001010000 Y"
b1001010000 a#
b1001010000 C'
b1001010000 i"
b1110 A
b1110 h"
b1110 f#
17
#165000
07
#170000
0b
b100101000000 c"
b10010011111 _"
b10000000000000000000010010011111 e"
b11111111111111111111101101011111 ["
b10010100000 R"
b10100000 P#
b10010100000 d
0g
b11 8"
0h
b11 x
b1111 A
b1111 h"
b1111 f#
b10010100000 b#
b10010100000 M
b10010100000 Y"
b10010100000 a#
b10010100000 C'
b10010100000 i"
b1111 ]#
b0 B
b0 l
b0 m#
b0 =
b0 m
b0 n#
b0 G
b0 i
b0 k#
1S
17
#175000
07
#180000
b1 N
b1 ^
b1 X"
b1 @
b1 Y
b1 D'
1?
1O
0d"
b1 B'
b1 _#
b1 ^#
b1 g"
b1000000001 P
b1000000001 [
b1000000001 f"
1P"
0T"
b1000000001 ^"
1O"
0N"
0a"
b101 \"
b100101000001 c"
b100101000001 _"
b100101000001 e"
b100101000001 ["
b0 R"
b1000000 P#
b100101000000 d
b1010000000000000000001000000001 F
b1010000000000000000001000000001 ]"
b1010000000000000000001000000001 h#
b100 x
b100 8"
0S
b10000 ]#
b100101000000 b#
b100101000000 M
b100101000000 Y"
b100101000000 a#
b100101000000 C'
b100101000000 i"
b10000 A
b10000 h"
b10000 f#
17
#185000
07
#190000
b0 N
b0 ^
b0 X"
b0 @
b0 Y
b0 D'
b10 B'
b11010010 _#
b11010010 ^#
1R
0?
0Q"
b0 g"
b1011010010 P
b1011010010 [
b1011010010 f"
0P"
b1011010010 ^"
0O"
1d#
1L
1Z"
b1001 \"
b0 c"
b100101000001 _"
b100101000001 e"
b100101000001 ["
b0 R"
b1000001 P#
b100101000001 d
b101 8"
b101 x
b10010000000000000000001011010010 F
b10010000000000000000001011010010 ]"
b10010000000000000000001011010010 h#
b10001 A
b10001 h"
b10001 f#
b100101000001 b#
b100101000001 M
b100101000001 Y"
b100101000001 a#
b100101000001 C'
b100101000001 i"
b10001 ]#
17
#195000
07
#200000
0*"
0+"
1."
0v
0$"
1'"
0H"
b100 3"
0w
b110 B'
b11010110 _#
b11010110 ^#
1T
0R
0I"
bz100 4"
1L"
0|
bz111 t
1!"
b1011010110 P
b1011010110 [
b1011010110 f"
1W"
0K"
0~
b1011010110 ^"
0d#
0L
0Z"
1V"
0F"
0z
b1000 \"
b1011 0"
b110 p
b1111 s
b10000000000000000000001011010110 F
b10000000000000000000001011010110 ]"
b10000000000000000000001011010110 h#
b0 x
b0 8"
b1 k
b100 n
b100 /"
b1001 j
b1001 o
b10010 ]#
b10010 A
b10010 h"
b10010 f#
17
#205000
07
#210000
0O
b0 N
b0 ^
b0 X"
b1 B'
b10001 _#
b10001 ^#
0`#
0C
0T
1S"
b10001 P
b10001 [
b10001 f"
0W"
b10001 ^"
0V"
b1100 \"
b0 _"
b0 e"
b0 ["
b0 P#
b0 d
15"
b1 8"
1u
b1 x
b11000000000000000000000000010001 F
b11000000000000000000000000010001 ]"
b11000000000000000000000000010001 h#
b10011 A
b10011 h"
b10011 f#
b0 b#
b0 M
b0 Y"
b0 a#
b0 C'
b0 i"
b10011 ]#
17
#215000
07
#220000
b0 B'
b0 _#
b0 ^#
0S"
1a"
b11111111111111111111111111111111 c"
1Q"
b0 P
b0 [
b0 f"
1M"
1T"
b0 ^"
1N"
1b
b0 \"
b11111111111111111111111111111111 _"
b1111111111111111111111111111111 e"
b11111111111111111111111111111111 ["
b11111111 P#
b111111111111 d
b0 F
b0 ]"
b0 h#
1h
0u
b10 x
b1111 f
b1111 y
1g
05"
b10 8"
b100 e
b100 9"
b10100 ]#
b11111111111111111111111111111111 b#
b11111111111111111111111111111111 M
b11111111111111111111111111111111 Y"
b11111111111111111111111111111111 a#
b11111111111111111111111111111111 C'
b11111111111111111111111111111111 i"
b10001 A
b10001 h"
b10001 f#
17
#225000
07
#230000
b0 _"
1d"
b10000000000000000000000000000000 e"
b11111111111111111111111111111110 ["
b1 R"
b1 g"
b1 N
b1 ^
b1 X"
1T
1O
b110 B'
b11010110 _#
b11010110 ^#
0Q"
b1011010110 P
b1011010110 [
b1011010110 f"
0P"
0M"
0T"
1W"
0b
b1011010110 ^"
0N"
1V"
0a"
b0 c"
b1000 \"
0g
b11 8"
0h
b11 x
b10000000000000000000001011010110 F
b10000000000000000000001011010110 ]"
b10000000000000000000001011010110 h#
b10010 A
b10010 h"
b10010 f#
b100 k"
b10101 ]#
b1 B
b1 l
b1 m#
b100 =
b100 m
b100 n#
b1111 G
b1111 i
b1111 k#
1S
17
#235000
07
#240000
0O
b1 B'
b10001 _#
b10001 ^#
0`#
0C
0T
1S"
b10001 P
b10001 [
b10001 f"
0W"
b0 R"
b10001 ^"
0V"
b0 g"
b1100 \"
b0 N
b0 ^
b0 X"
b1 _"
0d"
b1 e"
b1 ["
b1 P#
b1 d
b11000000000000000000000000010001 F
b11000000000000000000000000010001 ]"
b11000000000000000000000000010001 h#
b100 x
b100 8"
0S
b10110 ]#
b1 b#
b1 M
b1 Y"
b1 a#
b1 C'
b1 i"
b10011 A
b10011 h"
b10011 f#
17
#245000
07
#250000
b0 B'
b0 _#
b0 ^#
0S"
1Q"
b0 P
b0 [
b0 f"
1M"
1T"
b0 ^"
1N"
b0 \"
b0 _"
b0 e"
b0 ["
b0 P#
b0 d
b101 8"
b101 x
b0 F
b0 ]"
b0 h#
b10100 A
b10100 h"
b10100 f#
b0 b#
b0 M
b0 Y"
b0 a#
b0 C'
b0 i"
b10111 ]#
17
#255000
07
#260000
1o#
1T
1O
b110 B'
b11010110 _#
b11010110 ^#
0Q"
b1011010110 P
b1011010110 [
b1011010110 f"
0P"
0M"
0T"
b1011010110 ^"
0N"
1d#
1L
1Z"
b1001 \"
b10010000000000000000001011010110 F
b10010000000000000000001011010110 ]"
b10010000000000000000001011010110 h#
b110 x
b110 8"
b11000 ]#
b0 k"
b10101 A
b10101 h"
b10101 f#
17
#265000
07
#270000
0N%
0\&
b100 I&
0#%
0"%
03%
0/&
0.&
0?&
b1 ,&
b1010 B'
b11011010 _#
b11011010 ^#
1I
0T
0O%
b100 <%
1R%
0]&
bz100 J&
1`&
0'%
1*%
0-%
00%
04%
b1 !%
07%
03&
16&
09&
0<&
0@&
bz001 -&
0C&
b1011011010 P
b1011011010 [
b1011011010 f"
0o#
1W"
0Q%
0_&
0)%
0/%
06%
05&
0;&
0B&
b1011011010 ^"
0d#
0L
0Z"
1V"
0L%
0Z&
0%%
0+%
01%
01&
07&
0=&
b1000 \"
b1011 9%
b1011 E&
b0 |$
b0 (&
b111 8"
b111 x
b0 *$
b10000000000000000000001011011010 F
b10000000000000000000001011011010 ]"
b10000000000000000000001011011010 h#
b10110 A
b10110 h"
b10110 f#
b11001 ]#
b1 w#
b100 y#
b100 {#
b100 ^$
b100 t$
b100 8%
b100 q%
b100 ~%
b100 D&
b1111 v#
b1111 z#
b1111 ]$
b1111 s$
b1111 {$
b1111 p%
b1111 }%
b1111 '&
17
#275000
07
#280000
1X$
1Y$
0\$
1!$
1R$
0U$
1"$
1L$
0O$
1#$
0O
0=$
1F$
0I$
b0 N
b0 ^
b0 X"
0&$
1$$
b101 B'
b10101 _#
b10101 ^#
0`#
0C
0I
1S"
04$
17$
1@$
0C$
b10101 P
b10101 [
b10101 f"
0W"
b11 ~#
11$
0'$
0:$
1%$
b10101 ^"
0V"
10$
0/$
16$
05$
0<$
1;$
1B$
0A$
1H$
0G$
1N$
0M$
1T$
0S$
1[$
0Z$
b1100 \"
0-$
03$
19$
0?$
0E$
0K$
0Q$
0W$
1,$
12$
18$
1>$
1D$
1J$
1P$
1V$
b11000000000000000000000000010101 F
b11000000000000000000000000010101 ]"
b11000000000000000000000000010101 h#
b100 )$
b11111111 ($
b1 *$
b1000 x
b1000 8"
b100 u$
b100 ?%
b1 v$
b1 $%
b100 !&
b100 M&
b1 "&
b1 0&
b11010 ]#
b10111 A
b10111 h"
b10111 f#
17
#285000
07
#290000
b0 B'
b0 _#
b0 ^#
0S"
1a"
b11111111111111111111111111111111 c"
1Q"
b0 P
b0 [
b0 f"
1M"
1T"
b0 ^"
1N"
b0 \"
b11111111111111111111111111111111 _"
b1111111111111111111111111111111 e"
b11111111111111111111111111111111 ["
b11111111 P#
b111111111111 d
b1001 8"
b1001 x
b10 *$
b0 F
b0 ]"
b0 h#
b10101 A
b10101 h"
b10101 f#
b11111111111111111111111111111111 b#
b11111111111111111111111111111111 M
b11111111111111111111111111111111 Y"
b11111111111111111111111111111111 a#
b11111111111111111111111111111111 C'
b11111111111111111111111111111111 i"
b11011 ]#
b100 r%
b100 &&
b1 t%
b1 %&
b100 _$
b100 z$
b1 b$
b1 y$
17
#295000
07
#300000
1I
1O
b1010 B'
b11011010 _#
b11011010 ^#
0Q"
b1011011010 P
b1011011010 [
b1011011010 f"
0P"
0M"
0T"
1W"
b1011011010 ^"
0N"
1V"
0a"
b0 c"
b1000 \"
b10000000000000000000001011011010 F
b10000000000000000000001011011010 ]"
b10000000000000000000001011011010 h#
1}#
b11 *$
b1010 x
b1010 8"
b11100 ]#
b100 k"
b10110 A
b10110 h"
b10110 f#
17
#305000
07
#310000
0O
b0 N
b0 ^
b0 X"
b101 B'
b10101 _#
b10101 ^#
0`#
0C
0I
1S"
1i#
b10101 P
b10101 [
b10101 f"
0W"
b10101 ^"
0V"
b1100 \"
b0 _"
b0 e"
b0 ["
b0 P#
b0 d
b1011 8"
b1011 x
0}#
1t#
b100 *$
b11 r#
b11 +$
b11000000000000000000000000010101 F
b11000000000000000000000000010101 ]"
b11000000000000000000000000010101 h#
b10111 A
b10111 h"
b10111 f#
b0 b#
b0 M
b0 Y"
b0 a#
b0 C'
b0 i"
b11101 ]#
17
#315000
07
#320000
0K#
0L#
1O#
0s"
0E#
1H#
0t"
0?#
1B#
0u"
09#
1<#
0v"
03#
16#
0w"
0-#
10#
0y"
0x"
b0 B'
b0 _#
b0 ^#
0S"
1a"
b11111111111111111111111111111111 c"
1Q"
0!#
1$#
0'#
b11111101 q"
0*#
b0 P
b0 [
b0 f"
1M"
1T"
0##
0)#
b0 ^"
1N"
0}"
0%#
b0 \"
b11111100 l"
b11111111111111111111111111111111 _"
b1111111111111111111111111111111 e"
b11111111111111111111111111111111 ["
b11111111 P#
b111111111111 d
b0 F
b0 ]"
b0 h#
b1100 x
b1100 8"
1U
b11 >
b11 z"
b11 x#
b11110 ]#
b11111111111111111111111111111111 b#
b11111111111111111111111111111111 M
b11111111111111111111111111111111 Y"
b11111111111111111111111111111111 a#
b11111111111111111111111111111111 C'
b11111111111111111111111111111111 i"
b10101 A
b10101 h"
b10101 f#
17
#325000
07
#330000
b0 _"
1d"
b10000000000000000000000000000000 e"
b11111111111111111111111111111110 ["
b1 R"
b1 g"
b1 N
b1 ^
b1 X"
1I
1O
b1010 B'
b11011010 _#
b11011010 ^#
0Q"
b1011011010 P
b1011011010 [
b1011011010 f"
0P"
0M"
0T"
1W"
b1011011010 ^"
0N"
1V"
0a"
b0 c"
b1000 \"
b1101 8"
b1101 x
b10000000000000000000001011011010 F
b10000000000000000000001011011010 ]"
b10000000000000000000001011011010 h#
b10110 A
b10110 h"
b10110 f#
b11111 ]#
17
#335000
07
#340000
0O
b0 N
b0 ^
b0 X"
b0 R"
b101 B'
b10101 _#
b10101 ^#
0`#
0C
0I
1S"
b0 g"
b10101 P
b10101 [
b10101 f"
0W"
b10101 ^"
0V"
b1100 \"
b1 _"
0d"
b1 e"
b1 ["
b1 P#
b1 d
b11000000000000000000000000010101 F
b11000000000000000000000000010101 ]"
b11000000000000000000000000010101 h#
b1110 x
b1110 8"
b100000 ]#
b1 b#
b1 M
b1 Y"
b1 a#
b1 C'
b1 i"
b10111 A
b10111 h"
b10111 f#
17
#345000
07
#350000
b0 B'
b0 _#
b0 ^#
0S"
1Q"
b0 P
b0 [
b0 f"
1M"
1T"
b0 ^"
1N"
b0 \"
b0 _"
b0 e"
b0 ["
b0 P#
b0 d
b1111 8"
b1111 x
b0 F
b0 ]"
b0 h#
b11000 A
b11000 h"
b11000 f#
b0 b#
b0 M
b0 Y"
b0 a#
b0 C'
b0 i"
b100001 ]#
17
#355000
07
#360000
b1 N
b1 ^
b1 X"
1p"
1I
1O
b1010 B'
b11011010 _#
b11011010 ^#
0Q"
b1011011010 P
b1011011010 [
b1011011010 f"
0P"
0M"
0T"
b1011011010 ^"
0N"
1d#
1L
1Z"
b1001 \"
b10010000000000000000001011011010 F
b10010000000000000000001011011010 ]"
b10010000000000000000001011011010 h#
b0 x
b0 8"
b100010 ]#
b0 k"
b11001 A
b11001 h"
b11001 f#
17
#365000
07
#370000
b0 _"
b0 e"
b0 ["
b1110 B'
b11011110 _#
b11011110 ^#
1K
0I
b0 g"
b1011011110 P
b1011011110 [
b1011011110 f"
0p"
1W"
b1011011110 ^"
0d#
0L
0Z"
1V"
b1000 \"
b0 N
b0 ^
b0 X"
15"
b1 8"
1u
b1 x
b10000000000000000000001011011110 F
b10000000000000000000001011011110 ]"
b10000000000000000000001011011110 h#
b11010 A
b11010 h"
b11010 f#
0J
b0 {"
b100011 ]#
17
#375000
07
#380000
0O
b0 N
b0 ^
b0 X"
b1001 B'
b11001 _#
b11001 ^#
0`#
0C
0K
1S"
b11001 P
b11001 [
b11001 f"
0W"
b11001 ^"
0V"
1b
b1100 \"
b11000000000000000000000000011001 F
b11000000000000000000000000011001 ]"
b11000000000000000000000000011001 h#
1h
0u
b10 x
1g
05"
b10 8"
b100100 ]#
b1 {"
b11011 A
b11011 h"
b11011 f#
17
#385000
07
#390000
b0 B'
b0 _#
b0 ^#
0S"
1a"
b11111111111111111111111111111111 c"
1Q"
b0 P
b0 [
b0 f"
1M"
1T"
0b
b0 ^"
1N"
b0 \"
b11111111111111111111111111111111 _"
b1111111111111111111111111111111 e"
b11111111111111111111111111111111 ["
b11111111 P#
b111111111111 d
0g
b11 8"
0h
b11 x
b0 F
b0 ]"
b0 h#
b11001 A
b11001 h"
b11001 f#
b11111111111111111111111111111111 b#
b11111111111111111111111111111111 M
b11111111111111111111111111111111 Y"
b11111111111111111111111111111111 a#
b11111111111111111111111111111111 C'
b11111111111111111111111111111111 i"
1r"
b10 {"
b100101 ]#
1S
17
#395000
07
#400000
b0 _"
1d"
b10000000000000000000000000000000 e"
b11111111111111111111111111111110 ["
b1 R"
b1 g"
b1 N
b1 ^
b1 X"
1K
1O
b1110 B'
b11011110 _#
b11011110 ^#
0Q"
b1011011110 P
b1011011110 [
b1011011110 f"
0P"
0M"
0T"
1W"
b1011011110 ^"
0N"
1V"
0a"
b0 c"
b1000 \"
b10000000000000000000001011011110 F
b10000000000000000000001011011110 ]"
b10000000000000000000001011011110 h#
b100 x
b100 8"
0S
b100110 ]#
b11 H
b11 |"
b11 R#
0r"
1J
b11 {"
b100 k"
b11010 A
b11010 h"
b11010 f#
17
#405000
07
#410000
0O
b0 N
b0 ^
b0 X"
b0 R"
b1001 B'
b11001 _#
b11001 ^#
0`#
0C
0K
1S"
b0 g"
b11001 P
b11001 [
b11001 f"
0W"
b11001 ^"
0V"
b1100 \"
b1 _"
0d"
b1 e"
b1 ["
b1 P#
b1 d
b101 8"
b101 x
b11000000000000000000000000011001 F
b11000000000000000000000000011001 ]"
b11000000000000000000000000011001 h#
b11011 A
b11011 h"
b11011 f#
b1 b#
b1 M
b1 Y"
b1 a#
b1 C'
b1 i"
b100111 ]#
17
#415000
07
#420000
b0 B'
b0 _#
b0 ^#
0S"
1Q"
b0 P
b0 [
b0 f"
1M"
1T"
b0 ^"
1N"
b0 \"
b0 _"
b0 e"
b0 ["
b0 P#
b0 d
b0 F
b0 ]"
b0 h#
b110 x
b110 8"
b101000 ]#
b0 b#
b0 M
b0 Y"
b0 a#
b0 C'
b0 i"
b11100 A
b11100 h"
b11100 f#
17
#425000
07
#430000
b1 N
b1 ^
b1 X"
1K
1O
b1110 B'
b11011110 _#
b11011110 ^#
0Q"
b1011011110 P
b1011011110 [
b1011011110 f"
0P"
0M"
0T"
b1011011110 ^"
0N"
1d#
1L
1Z"
b1001 \"
b111 8"
b111 x
b10010000000000000000001011011110 F
b10010000000000000000001011011110 ]"
b10010000000000000000001011011110 h#
b11101 A
b11101 h"
b11101 f#
b0 k"
b101001 ]#
17
#435000
07
#440000
0O
b0 N
b0 ^
b0 X"
b1101 B'
b11101 _#
b11101 ^#
0`#
0C
0K
1S"
b11101 P
b11101 [
b11101 f"
b10110000 3
b10110000 W
b10110000 [#
b11101 ^"
0d#
0L
0Z"
b11 V#
b1100 \"
b11 W#
b1000 \#
b11000000000000000000000000011101 F
b11000000000000000000000000011101 ]"
b11000000000000000000000000011101 h#
b1000 x
b1000 8"
b11 X#
b0 ]#
b11110 A
b11110 h"
b11110 f#
17
#445000
07
#450000
b0 B'
b0 _#
b0 ^#
0S"
1a"
b11111111111111111111111111111111 c"
1Q"
b0 P
b0 [
b0 f"
1M"
1T"
b0 ^"
1N"
b0 \"
b11111111111111111111111111111111 _"
b1111111111111111111111111111111 e"
b11111111111111111111111111111111 ["
b11111111 P#
b111111111111 d
b1001 8"
b1001 x
b0 F
b0 ]"
b0 h#
b11101 A
b11101 h"
b11101 f#
b11111111111111111111111111111111 b#
b11111111111111111111111111111111 M
b11111111111111111111111111111111 Y"
b11111111111111111111111111111111 a#
b11111111111111111111111111111111 C'
b11111111111111111111111111111111 i"
b1 ]#
17
#455000
07
#460000
b0 N
b0 ^
b0 X"
0`#
0C
0O
b1101 B'
b11101 _#
b11101 ^#
1S"
0Q"
b11101 P
b11101 [
b11101 f"
0P"
0M"
0T"
b11101 ^"
0N"
0a"
b0 c"
b1100 \"
b11000000000000000000000000011101 F
b11000000000000000000000000011101 ]"
b11000000000000000000000000011101 h#
b1010 x
b1010 8"
b10 ]#
b100 k"
b11110 A
b11110 h"
b11110 f#
17
#465000
07
#470000
b0 B'
b0 _#
b0 ^#
0S"
1a"
b11111111111111111111111111111110 c"
1Q"
b0 P
b0 [
b0 f"
1M"
1T"
b0 ^"
1N"
b0 \"
b11111111111111111111111111111110 _"
b1111111111111111111111111111110 e"
b11111111111111111111111111111110 ["
b11111110 P#
b111111111110 d
b1011 8"
b1011 x
b0 F
b0 ]"
b0 h#
b11111 A
b11111 h"
b11111 f#
b11111111111111111111111111111110 b#
b11111111111111111111111111111110 M
b11111111111111111111111111111110 Y"
b11111111111111111111111111111110 a#
b11111111111111111111111111111110 C'
b11111111111111111111111111111110 i"
b11 ]#
17
#475000
07
#480000
b1100 x
b1100 8"
b100 ]#
b100000 A
b100000 h"
b100000 f#
17
#485000
07
#490000
b1101 8"
b1101 x
b100001 A
b100001 h"
b100001 f#
b101 ]#
17
#495000
07
#500000
b1110 x
b1110 8"
b110 ]#
b100010 A
b100010 h"
b100010 f#
17
#505000
07
#510000
b1111 8"
b1111 x
b100011 A
b100011 h"
b100011 f#
b111 ]#
17
#515000
07
#520000
b0 x
b0 8"
b1000 ]#
b100100 A
b100100 h"
b100100 f#
17
#525000
07
#530000
15"
b1 8"
1u
b1 x
b100101 A
b100101 h"
b100101 f#
b1001 ]#
17
#535000
07
#540000
1b
1h
0u
b10 x
1g
05"
b10 8"
b1010 ]#
b100110 A
b100110 h"
b100110 f#
17
#545000
07
#550000
0b
0g
b11 8"
0h
b11 x
b100111 A
b100111 h"
b100111 f#
b1011 ]#
1S
17
#555000
07
#560000
b100 x
b100 8"
0S
b1100 ]#
b101000 A
b101000 h"
b101000 f#
17
#565000
07
#570000
b101 8"
b101 x
b101001 A
b101001 h"
b101001 f#
b1101 ]#
17
#571000
